import streamlit as st
import os
import pandas as pd
from analyse_technique import ajouter_indicateurs_techniques, analyser_signaux_techniques
from fonctions_chat import obtenir_reponse_ava
from fonctions_actualites import get_general_news
from fonctions_meteo import get_meteo_ville

st.set_page_config(page_title="Chat AVA", layout="centered")

st.title("ü§ñ AVA - Chat IA")
st.markdown("Posez-moi vos questions sur la bourse, la m√©t√©o, les actualit√©s... ou juste pour discuter !")

if "messages" not in st.session_state:
    st.session_state.messages = []

# Fonction d'analyse de sentiment

def analyser_sentiment(news_list):
    mots_positifs = ["progress", "gain", "rise", "success", "growth"]
    mots_negatifs = ["fall", "loss", "drop", "crash", "recession"]
    score = 0
    for titre, _ in news_list:
        titre = titre.lower()
        score += sum(1 for mot in mots_positifs if mot in titre)
        score -= sum(1 for mot in mots_negatifs if mot in titre)
    if score > 1:
        return "üü¢ Le sentiment global du march√© est **positif**."
    elif score < -1:
        return "üî¥ Le sentiment global du march√© est **n√©gatif**."
    else:
        return "üü° Le sentiment global du march√© est **neutre**."

# Affichage des anciens messages
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# --- Interaction principale ---
question = st.chat_input("Que souhaitez-vous demander √† AVA ?")

if question:
    with st.chat_message("user"):
        st.markdown(question)

    with st.chat_message("assistant"):
        question_clean = question.lower().strip()
        message_bot = ""

        if "actualit√©" in question_clean or "news" in question_clean:
            try:
                actus = get_general_news()
                if isinstance(actus, str):
                    message_bot = actus
                elif actus:
                    message_bot = "üì∞ Voici les actualit√©s :\n\n" + "\n".join([
                        f"üîπ [{titre}]({lien})" for titre, lien in actus
                    ])
                else:
                    message_bot = "‚ùå Aucune actualit√© disponible pour le moment."
            except Exception as e:
                message_bot = f"‚ö†Ô∏è Une erreur est survenue lors de la r√©cup√©ration des actualit√©s : {e}"

        elif "m√©t√©o" in question_clean or "quel temps" in question_clean:
            import re
            ville_detectee = None
            pattern = re.compile(r"\b(?:√†|sur|pour|de|en)\s([A-Z][a-z√†-√º\-\s]{2,})")
            match = pattern.search(question)
            if match:
                ville_detectee = match.group(1).strip()
            if not ville_detectee:
                for mot in question.split():
                    if mot and mot[0].isupper() and len(mot) > 2:
                        ville_detectee = mot
                        break
            if not ville_detectee:
                ville_detectee = "Paris"
            message_bot = get_meteo_ville(ville_detectee)

        elif any(phrase in question_clean for phrase in ["√ßa va", "comment tu vas", "tu vas bien"]):
            message_bot = "Je vais super bien, pr√™te √† analyser le monde avec vous ! Et vous ?"

        elif any(phrase in question_clean for phrase in ["quoi de neuf", "tu fais quoi", "des news"]):
            message_bot = "Je scrute les march√©s, je capte les tendances‚Ä¶ une journ√©e normale pour une IA boursi√®re !"

        elif any(phrase in question_clean for phrase in ["t'es qui", "tu es qui", "t'es quoi", "tu es quoi"]):
            message_bot = "Je suis AVA, votre assistante virtuelle boursi√®re, m√©t√©o, et bien plus. Disons... une alli√©e du futur."

        elif any(phrase in question_clean for phrase in ["tu dors", "t'es l√†", "tu es l√†"]):
            message_bot = "Je ne dors jamais. Toujours connect√©e, toujours pr√™te. Posez votre question !"

        elif "salut" in question_clean or "bonjour" in question_clean:
            message_bot = "üëã Bonjour ! Je suis AVA. Besoin d'une analyse ou d'un coup de pouce ? üòä"

        elif any(symb in question_clean for symb in ["aapl", "tsla", "googl", "btc", "bitcoin", "eth", "fchi", "cac", "^fchi"]):
            nom_ticker = question_clean.replace(" ", "").replace("-", "")
            mapping = {
                "btc": "btc-usd",
                "bitcoin": "btc-usd",
                "eth": "eth-usd",
                "aapl": "aapl",
                "tsla": "tsla",
                "googl": "googl",
                "fchi": "^fchi",
                "cac": "^fchi",
                "^fchi": "^fchi",
            }
            for key, value in mapping.items():
                if key in nom_ticker:
                    nom_ticker = value

            data_path = f"data/donnees_{nom_ticker}.csv"

            if not os.path.exists(data_path):
                try:
                    import yfinance as yf
                    df = yf.download(nom_ticker, period="6mo", interval="1d")
                    df.to_csv(data_path, index=True)
                except Exception as e:
                    message_bot = f"‚ùå Impossible de t√©l√©charger les donn√©es pour {nom_ticker.upper()} : {e}"

            if os.path.exists(data_path):
                df = pd.read_csv(data_path)
                df.columns = [col.capitalize() for col in df.columns]
                if "Close" not in df.columns:
                    message_bot = f"‚ö†Ô∏è Les donn√©es pour {nom_ticker.upper()} sont invalides. Aucune colonne 'Close' trouv√©e.\n(Colonnes pr√©sentes : {', '.join(df.columns)})"
                else:
                    try:
                        analyse, suggestion = analyser_signaux_techniques(df)
                        message_bot = (
                            f"üìä Voici mon analyse technique pour **{nom_ticker.upper()}** :\n\n"
                            f"{analyse}\n\n"
                            f"ü§ñ *Mon intuition d'IA ?* {suggestion}"
                        )
                    except Exception as e:
                        message_bot = f"‚ö†Ô∏è Une erreur est survenue pendant l'analyse : {e}"
            else:
                message_bot = f"‚ö†Ô∏è Je n‚Äôai pas pu r√©cup√©rer les donn√©es pour {nom_ticker.upper()}"

        else:
            try:
                message_bot = obtenir_reponse_ava(question)
            except Exception as e:
                message_bot = f"‚ö†Ô∏è Une erreur est survenue lors du traitement de votre question : {e}"

        st.markdown(message_bot)
        st.session_state.messages.append({"role": "assistant", "content": message_bot})

# Bouton pour effacer les messages uniquement
st.sidebar.button("ü™ë Effacer les messages", on_click=lambda: st.session_state.__setitem__("messages", []))










