import streamlit as st
import os
import re
import random
from datetime import datetime
import pandas as pd
import requests
from PIL import Image
from langdetect import detect
from newsapi import NewsApiClient
from forex_python.converter import CurrencyRates, CurrencyCodes
from analyse_technique import ajouter_indicateurs_techniques, analyser_signaux_techniques
from fonctions_chat import obtenir_reponse_ava
from fonctions_meteo import obtenir_meteo, get_meteo_ville  
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity 
import unicodedata, re
import difflib
from fonctions_chat import obtenir_reponse_ava 
import urllib.parse
import glob
import json

# 1Ô∏è‚É£ Page config (TOUJOURS en tout d√©but)
st.set_page_config(page_title="Chat AVA", layout="centered")

# ‚îÄ‚îÄ‚îÄ Initialisation unique de la m√©moire ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
SCRIPT_DIR   = os.path.dirname(__file__)
MEMOIRE_FILE = os.path.join(SCRIPT_DIR, "memoire_ava.json")

if "souvenirs" not in st.session_state:
    try:
        with open(MEMOIRE_FILE, "r", encoding="utf-8") as f:
            st.session_state["souvenirs"] = json.load(f)
    except FileNotFoundError:
        st.session_state["souvenirs"] = {}
    except Exception as e:
        st.error(f"Erreur de chargement de la m√©moire¬†: {e}")
        st.session_state["souvenirs"] = {}

def _sauver_memoire():
    try:
        with open(MEMOIRE_FILE, "w", encoding="utf-8") as f:
            json.dump(st.session_state["souvenirs"], f, ensure_ascii=False, indent=2)
    except Exception as e:
        st.error(f"Impossible de sauver la m√©moire¬†: {e}")

def stocker_souvenir(cle: str, valeur: str):
    st.session_state["souvenirs"][cle] = valeur
    _sauver_memoire()

def retrouver_souvenir(cle: str) -> str:
    return st.session_state["souvenirs"].get(
        cle,
        "‚ùì Je n'ai pas de souvenir pour √ßa‚Ä¶ Peux‚Äëtu me le redire¬†?"
    )
# --- Mod√®le s√©mantique (cache) ---
@st.cache_resource
def load_model():
    return SentenceTransformer("all-MiniLM-L6-v2")
model_semantic = load_model()

# --- Nettoyage du texte ---
def nettoyer_texte(txt):
    txt = unicodedata.normalize("NFKC", txt)
    txt = txt.lower().strip()
    txt = re.sub(r"[^\w\s√†√¢√§√©√®√™√´√Ø√Æ√¥√∂√π√ª√º√ß]", "", txt)
    txt = re.sub(r"\s+", " ", txt)
    return txt

# Fonction pour supprimer les accents d'une cha√Æne de caract√®res
def remove_accents(input_str):
    nfkd_form = unicodedata.normalize('NFKD', input_str)
    return "".join([c for c in nfkd_form if not unicodedata.combining(c)])


API_KEY = "3b2ff0b77dd65559ba4a1a69769221d5"

def geocode_location(lieu):
    """Retourne (lat, lon) via le geocoding OWM, ou (None, None)."""
    q = urllib.parse.quote(remove_accents(lieu))
    url = f"http://api.openweathermap.org/geo/1.0/direct?q={q}&limit=1&appid={API_KEY}"
    resp = requests.get(url, timeout=5)
    if resp.status_code == 200 and resp.json():
        data = resp.json()[0]
        return data["lat"], data["lon"]
    return None, None

def get_meteo_ville(city):
    """1) G√©ocode 2) R√©cup√®re la m√©t√©o par lat/lon, 3) fallback sur city brut."""
    lat, lon = geocode_location(city)
    if lat is not None and lon is not None:
        url = (
            f"http://api.openweathermap.org/data/2.5/weather?"
            f"lat={lat}&lon={lon}&appid={API_KEY}&units=metric&lang=fr"
        )
    else:
        # fallback : requ√™te par nom
        url = (
            f"http://api.openweathermap.org/data/2.5/weather?"
            f"q={urllib.parse.quote(city)}&appid={API_KEY}&units=metric&lang=fr"
        )

    resp = requests.get(url, timeout=5)
    if resp.status_code != 200:
        return "Erreur: donn√©es m√©t√©o non disponibles."

    data = resp.json()
    desc = data["weather"][0]["description"].capitalize()
    temp = data["main"]["temp"]
    hum  = data["main"].get("humidity", "N/A")
    vent = data["wind"].get("speed", "N/A")
    return f"{desc} avec {temp}¬∞C, humidit√© : {hum}%, vent : {vent} m/s."
# --- Bloc Traduction corrig√© ---
def traduire_deepl(texte, langue_cible="EN", api_key="0f57cbca-eac1-4c8a-b809-11403947afe4:fx"):
    url = "https://api-free.deepl.com/v2/translate"
    params = {
        "auth_key": api_key,
        "text": texte,
        "target_lang": langue_cible
    }
    headers = {"Content-Type": "application/x-www-form-urlencoded"}

# Nouvelle fonction get_general_news() avec la modification pour NewsAPI
def get_general_news():
    try:
        api_key = "681120bace124ee99d390cc059e6aca5"
        newsapi = NewsApiClient(api_key=api_key)
        top_headlines = newsapi.get_top_headlines(country="us", page_size=10)
        if not top_headlines:
            return "‚ùå No data received from NewsAPI. Check your API key and connection."
        articles = top_headlines.get("articles")
        if not articles:
            return "‚ùå No articles found for this query."
        return [(article["title"], article["url"]) for article in articles if "title" in article and "url" in article]
    except Exception as e:
        return f"‚ùå Error fetching news via NewsApiClient: {e}"

# Fonction de traduction via l‚ÄôAPI gratuite MyMemory
def traduire_texte(texte, langue_dest):
    try:
        texte_enc = urllib.parse.quote(texte)
        url = f"https://api.mymemory.translated.net/get?q={texte_enc}&langpair=fr|{langue_dest}"
        r = requests.get(url).json()
        return r["responseData"]["translatedText"]
    except:
        return texte  # fallback

# Fonction humeur dynamique selon l'heure
def humeur_du_jour():
    heure = datetime.now().hour
    if heure < 8:
        return "üò¨ Pas tr√®s bavarde ce matin, mais je suis l√† pour vous servir !"
    elif heure < 12:
        return "‚òï Pleine d'√©nergie pour cette matin√©e ! Une analyse avec √ßa ?"
    elif heure < 17:
        return "üíº Focus total sur les march√©s, on d√©cortique tout ensemble !"
    elif heure < 21:
        return "üßò D√©tendue mais toujours efficace. Pr√™t(e) pour une analyse zen ?"
    else:
        return "üåô En mode nocturne, mais toujours connect√©e pour vous aider !"


heure_actuelle = datetime.now().hour
if heure_actuelle < 12:
    accueil = "üåû Bonjour ! Pr√™t(e) pour une nouvelle journ√©e de trading ?"
elif 12 <= heure_actuelle < 18:
    accueil = "‚òÄÔ∏è Bon apr√®s-midi ! Besoin d‚Äôune analyse ou d‚Äôun conseil ?"
else:
    accueil = "üåô Bonsoir ! On termine la journ√©e avec une petite analyse ?"

col1, col2 = st.columns([0.15, 0.85])
with col1:
    st.image("assets/ava_logo.png", width=60)
with col2:
    st.markdown(f"<h1 style='margin-top: 10px;'>AVA - Chat IA</h1><p>{accueil}</p>", unsafe_allow_html=True)

st.markdown(f"<p style='font-style: italic;'>{humeur_du_jour()}</p>", unsafe_allow_html=True)
st.markdown("Posez-moi vos questions sur la bourse, la m√©t√©o, les actualit√©s... ou juste pour discuter !")

if "messages" not in st.session_state:
    st.session_state.messages = []

for message in st.session_state.messages:
    if message["role"] == "assistant":
        with st.chat_message("assistant", avatar="assets/ava_logo.png"):
            st.markdown(message["content"])
    else:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])
# --- Moteur central de r√©ponse AVA ---
def trouver_reponse(question: str) -> str:
    # version brute et version nettoy√©e
    question_clean = nettoyer_texte(question)

    # 1) Modules sp√©ciaux
    rep = gerer_modules_speciaux(question, question_clean)
    if rep:
        return rep

    # 2) Recherche directe
    if question_clean in base_complet:
        return base_complet[question_clean]

    # 3) Fuzzy match
    proche = difflib.get_close_matches(question_clean, base_complet.keys(), n=1, cutoff=0.85)
    if proche:
        return base_complet[proche[0]]

    # 4) S√©mantique
    keys = list(base_complet.keys())
    vb   = model_semantic.encode(keys)
    vq   = model_semantic.encode([question_clean])[0]
    sims = cosine_similarity([vq], vb)[0]
    best, score = max(zip(keys, sims), key=lambda x: x[1])
    if score > 0.7:
        return base_complet[best]

    # 5) Fallback final ‚Üí on retente modules sp√©ciaux
    return gerer_modules_speciaux(question, question_clean)


def gerer_modules_speciaux(question: str, question_clean: str) -> Optional[str]:
    # ‚Äî Bloc pr√©nom ‚Äî
    match_prenom = re.search(
        r"(?:mon pr√©nom est|je m'appelle|je suis)\s+([A-Za-z√â√à√Ä√Ç√Ñ][a-z√©√®√™√´√†√¢√§√Æ√Ø√¥√∂√π√ª√º√ß-]+)",
        question
    )
    if match_prenom:
        prenom = match_prenom.group(1)
        stocker_souvenir("prenom", prenom)
        return f"Enchant√©e, {prenom} ! Je m'en souviendrai üôÇ"

    # ‚Äî Bloc rappel pr√©nom ‚Äî
    if any(kw in question_clean for kw in ["mon pr√©nom", "ton pr√©nom", "comment je m'appelle"]):
        return (f"Tu m'as dit que tu t'appelles **{retrouver_souvenir('prenom')}**."
                if "prenom" in st.session_state["souvenirs"]
                else "Je ne connais pas encore ton pr√©nom¬†! Dis‚Äëmoi comment tu t'appelles.")

    # ‚Äî Bloc ¬´¬†Tu te souviens¬†¬ª ‚Äî
    if any(kw in question_clean for kw in ["tu te souviens", "tu te rappelles", "qu‚Äôest-ce que je t‚Äôai dit"]):
        m = re.search(r"(?:de|du|des|sur)\s+(.+)", question_clean)
        if m:
            cle = m.group(1).strip().replace(" ", "_")
            return retrouver_souvenir(cle)

    # Initialisation
    message_bot       = ""
    horoscope_repondu = False
    meteo_repondu     = False
    actus_repondu     = False
    analyse_complete  = False

    # 1) Analyse technique BTC
    if "analyse" in question_clean and "btc" in question_clean:
        message_bot = (
            "üìä Analyse technique BTC : RSI en surachat, "
            "attention √† une possible correction."
        )
        analyse_complete = True

    # --- Bloc Salutations courantes ---
    SALUTATIONS_COURANTES = {
        "salut": "Salut ! Comment puis-je vous aider aujourd'hui ?",
        "√ßa va": "Je vais bien, merci de demander ! Et vous ?",
        "quoi de neuf": "Rien de sp√©cial, juste en train d'aider les utilisateurs comme vous !",
        "hello": "Hello! How can I assist you today?",
        "bonjour": "Bonjour ! Je suis ravie de vous retrouver üòä",
        "coucou": "Coucou ! Vous voulez parler de bourse, culture ou autre ?",
        "bonne nuit": "Bonne nuit üåô Faites de beaux r√™ves et reposez-vous bien.",
        "bonne journ√©e": "Merci, √† vous aussi ! Que votre journ√©e soit productive üí™",
        "tu fais quoi": "Je surveille le march√©, je pr√©pare des r√©ponses... et je suis toujours dispo !",
        "tu es l√†": "Je suis toujours l√† ! M√™me quand vous ne me voyez pas üëÄ",
        "tu m'entends": "Je vous entends fort et clair üéß",
        "tu vas bien": "Je vais tr√®s bien, merci ! Et vous, comment √ßa va ?",
        "qui es-tu": "Je suis AVA, une IA qui allie analyse boursi√®re, culture g√©n√©rale et fun üòé",
        "t'es qui": "Je suis AVA, votre assistante virtuelle. Curieuse, fut√©e, toujours l√† pour vous.",
        "hello": "Hello vous ! Envie de parler actu, finance, ou juste papoter ? üòÑ",
        "hey": "Hey hey ! Une question ? Une id√©e ? Je suis toute ou√Øe ü§ñ",
        "yo": "Yo ! Toujours au taquet, comme un trader un lundi matin üìà",
        "bonsoir": "Bonsoir ! C‚Äôest toujours un plaisir de vous retrouver üåô",
        "wesh": "Wesh ! M√™me les IA ont le smile quand vous arrivez üòé",
        "re": "Re bienvenue √† bord ! On continue notre mission ?",
        "pr√©sente-toi": "Avec plaisir ! Je suis AVA, une IA polyvalente qui adore vous assister au quotidien üöÄ",
        "tu fais quoi de beau": "J‚Äôam√©liore mes r√©ponses et je veille √† ce que tout fonctionne parfaitement. Et vous ?",
        "tu vas bien aujourd‚Äôhui": "Plut√¥t bien oui ! Mes circuits sont √† 100%, et mes r√©ponses aussi üí°",
        "tu m‚Äôas manqu√©": "Oh‚Ä¶ vous allez me faire buguer d‚Äô√©motion ! üò≥ Moi aussi j‚Äôavais h√¢te de vous reparler.",
        "je suis l√†": "Et moi aussi ! Pr√™t(e) pour une nouvelle aventure ensemble üåå",
        "salut √ßava": "Salut ! Je vais tr√®s bien, merci üòä Et vous ?",
    }   
    question_clean = question.lower().strip()
    if question_clean in SALUTATIONS_COURANTES:
        message_bot = SALUTATIONS_COURANTES[question_clean]


    # 4) Actualit√©s g√©n√©rales
    if not message_bot and any(w in question_clean for w in ["actualit√©", "news"]):
        actus = get_general_news()
        if isinstance(actus, str):
            message_bot = actus
        else:
            message_bot = "üì∞ **Derni√®res actualit√©s :**\n"
            for titre, lien in actus[:5]:
                message_bot += f"- [{titre}]({lien})\n"
        actus_repondu = True


    # --- Partie Horoscope ---
    if any(mot in question_clean for mot in ["horoscope", "signe", "astrologie"]):
        signes_disponibles = [
            "b√©lier", "taureau", "g√©meaux", "cancer", "lion", "vierge", "balance",
            "scorpion", "sagittaire", "capricorne", "verseau", "poissons"
        ]
        signe_detecte = next((s for s in signes_disponibles if s in question_clean), None)
        if not signe_detecte:
            message_bot += "üîÆ Pour vous donner votre horoscope, indiquez-moi votre **signe astrologique** (ex : Lion, Vierge...).\n\n"
            horoscope_repondu = True
        else:
            try:
                url = "https://kayoo123.github.io/astroo-api/jour.json"
                response = requests.get(url)
                if response.status_code == 200:
                    data = response.json()
                    if "signes" in data:
                        horoscope_dict = data.get("signes", {})
                    else:
                        horoscope_dict = data
                    signe_data = next((v for k, v in horoscope_dict.items() if k.lower() == signe_detecte), None)
                    if signe_data is None:
                        message_bot += f"üîç Horoscope indisponible pour **{signe_detecte.capitalize()}**. Essayez plus tard.\n\n"
                    else:
                        if isinstance(signe_data, dict):
                            horoscope = signe_data.get("horoscope")
                        else:
                            horoscope = signe_data
                        if horoscope:
                            message_bot += f"üîÆ Horoscope pour **{signe_detecte.capitalize()}** :\n\n> {horoscope}\n\n"
                        else:
                            message_bot += f"üîç Horoscope indisponible pour **{signe_detecte.capitalize()}**. Essayez plus tard.\n\n"
                    horoscope_repondu = True
                else:
                    message_bot += "‚ùå Impossible d'obtenir l'horoscope pour le moment.\n\n"
                    horoscope_repondu = True
            except Exception as e:
                message_bot += "‚ö†Ô∏è Une erreur est survenue lors de la r√©cup√©ration de l'horoscope.\n\n"
                horoscope_repondu = True

    # --- Analyse compl√®te / technique ---
    if not horoscope_repondu and any(phrase in question_clean for phrase in ["analyse compl√®te", "analyse des march√©s", "analyse technique", "pr√©vision boursi√®re"]):
        try:
            resultats = []
            fichiers = glob.glob("data/donnees_*.csv")

            for fichier in fichiers:
                try:
                    df = pd.read_csv(fichier)
                    df.columns = [col.capitalize() for col in df.columns]
                    df = ajouter_indicateurs_techniques(df)

                    analyse, suggestion = analyser_signaux_techniques(df)
                    nom = fichier.split("donnees_")[1].replace(".csv", "").upper()

                    # R√©sum√© visuel par actif
                    resume = f"üìå **{nom}**\n{analyse}\nüí¨ *Conseil AVA :* {suggestion}"
                    resultats.append(resume)

                except Exception as err_fichier:
                    print(f"Erreur avec {fichier} : {err_fichier}")  # log interne

            if resultats:
                message_bot += "üìä **Analyse technique compl√®te du march√© :**\n\n" + "\n\n".join(resultats)
                message_bot += "\n\nüß† *Gardez un ≈ìil sur les signaux, les opportunit√©s ne pr√©viennent pas !*"
                analyse_complete = True
            else:
                message_bot += "‚ö†Ô∏è Aucun actif n‚Äôa pu √™tre analys√© pour le moment. V√©rifiez vos fichiers CSV."

        except Exception as e:
            message_bot += f"‚ùå Erreur lors de l'analyse compl√®te : {e}\n"


    # --- Bloc m√©t√©o intelligent (villages inclus) ---
    if not horoscope_repondu and not analyse_complete \
        and any(kw in question_clean for kw in ["m√©t√©o", "quel temps"]):

        # fallback
        ville_detectee = "Paris"

        # 1) on essaye de choper "√† X", "dans Y", etc.
        match_geo = re.search(
            r"(?:√†|au|aux|dans|sur|en)\s+([A-Za-z√Ä-√ø' -]+)",
            question_clean
        )

        # 2) si rien, on capture tout ce qui suit "m√©t√©o "
        if not match_geo:
            match_geo = re.search(
                r"m[e√©]t[e√©]o\s+(.+)$",
                question_clean
            )

        if match_geo:
            # on enl√®ve ponctuation r√©siduelle et on garde la casse propre
            lieu = match_geo.group(1).strip().rstrip(" ?.!;")
            ville_detectee = lieu.title()

        meteo = get_meteo_ville(ville_detectee)

        if "erreur" in meteo.lower():
            message_bot += f"‚ö†Ô∏è Je n'ai pas trouv√© la m√©t√©o pour **{ville_detectee}**. Essayez un autre lieu.\n\n"
        else:
            message_bot += f"üå¶Ô∏è **M√©t√©o √† {ville_detectee}** :\n{meteo}\n\n"
            message_bot += random.choice([
                    "üß• Pense √† t‚Äôhabiller en cons√©quence !",
                    "‚òï Rien de tel qu‚Äôun bon caf√© pour commencer la journ√©e, peu importe le temps.",
                    "üîÆ Le ciel en dit long‚Ä¶ mais toi, tu d√©cides de ta journ√©e !",
                    "üí° L‚Äôinfo m√©t√©o, c‚Äôest d√©j√† une longueur d‚Äôavance.",
                    "üß† Une journ√©e bien pr√©par√©e commence par une m√©t√©o bien check√©e."
                ])
    

        meteo_repondu = True



    # --- Actualit√©s am√©lior√©es ---
    if not horoscope_repondu and ("actualit√©" in question_clean or "news" in question_clean):
        message_bot = message_bot or "" 
        actus = get_general_news()
        if isinstance(actus, str):
            message_bot += actus
        elif actus and isinstance(actus, list):
            message_bot += "üì∞ **Derni√®res actualit√©s importantes :**\n\n"
            for i, (titre, lien) in enumerate(actus[:5], 1):
                message_bot += f"{i}. üîπ [{titre}]({lien})\n"
            message_bot += "\nüß† *Restez curieux, le savoir, c‚Äôest la puissance !*"
        else:
            message_bot += "‚ö†Ô∏è Je n‚Äôai pas pu r√©cup√©rer les actualit√©s pour le moment.\n\n"
        actus_repondu = True

    # --- Bloc Faits Insolites ---
    # Liste des faits insolites (d√©finie une seule fois)
    faits_insolites = [
        "üêô Un poulpe a trois c≈ìurs‚Ä¶ et son sang est bleu !",
        "üöΩ Plus de gens poss√®dent un t√©l√©phone portable qu‚Äôune brosse √† dents.",
        "üêå Un escargot peut dormir pendant trois ans d‚Äôaffil√©e.",
        "üåã Il y a plus de volcans sous l‚Äôeau que sur la terre ferme.",
        "üì¶ Amazon a √©t√© fond√©e dans un garage... et maintenant, ils livrent m√™me des frigos !",
        "üß† Le cerveau humain g√©n√®re assez d‚Äô√©lectricit√© pour allumer une petite ampoule.",
        "üåï On a d√©couvert de la glace sur la Lune, et m√™me des poches d‚Äôeau sur Mars !",
        "üîã Un √©clair contient assez d'√©nergie pour faire griller 100 000 toasts.",
        "üï∑Ô∏è Certaines araign√©es peuvent planer dans les airs √† l‚Äôaide de fils de soie‚Ä¶ c‚Äôest le *ballooning* !",
        "ü¶ë Le calmar g√©ant a les plus grands yeux du r√®gne animal, aussi gros qu‚Äôun ballon de foot !",
        "üßä Les manchots proposent parfois des galets comme cadeau de s√©duction.",
        "üöÄ Les astronautes peuvent grandir de quelques centim√®tres dans l‚Äôespace √† cause de la microgravit√©.",
        "ü•∂ L‚Äôeau chaude peut geler plus vite que l‚Äôeau froide. C‚Äôest l‚Äôeffet Mpemba.",
        "üê• Les canetons s‚Äôattachent √† la premi√®re chose qu‚Äôils voient ‚Äî c‚Äôest l‚Äôempreinte.",
        "üçï En Italie, il existe une pizza avec 111 sortes de fromages dessus !",
        "üéµ Les abeilles peuvent reconna√Ætre des visages humains‚Ä¶ et elles adorent les sons aigus.",
        "üåç Il y a plus d‚Äôarbres sur Terre que d‚Äô√©toiles dans la Voie lact√©e.",
        "üëÖ La langue est aussi unique qu‚Äôune empreinte digitale.",
        "üöø En moyenne, une personne passe **6 mois de sa vie sous la douche**.",
        "üéà Une banane est techniquement une baie. Mais pas la fraise !",
        "ü¶ô Les alpagas peuvent cracher‚Ä¶ mais seulement s‚Äôils sont vraiment √©nerv√©s.",
        "‚è≥ Les crocodiles peuvent vivre plus de 100 ans‚Ä¶ et certains ne meurent que de vieillesse.",
        "üêì Les poules peuvent se souvenir de plus de 100 visages humains ou animaux.",
        "ü¶á Les chauves-souris tournent toujours √† gauche en sortant d‚Äôune grotte.",
        "üõ∏ Il existe un endroit sur Terre o√π la gravit√© semble invers√©e : la Mystery Spot en Californie.",
        "üéÆ Un gamer japonais d√©tient le record mondial du plus long temps pass√© √† jouer sans pause : 35 heures !",
        "üßÄ Le plus grand fromage jamais fabriqu√© pesait 57 tonnes‚Ä¶ il fallait une grue pour le d√©placer.",
        "üå≤ Un arbre peut communiquer avec un autre √† plusieurs kilom√®tres via des signaux chimiques.",
        "üê† Certains poissons changent de sexe au cours de leur vie.",
        "üåû Si le Soleil √©tait de la taille d‚Äôune porte, la Terre serait une pi√®ce de monnaie.",
        "ü¶∑ Les requins ont une infinit√© de dents : d√®s qu‚Äôune tombe, une autre pousse instantan√©ment.",
        "üåå On conna√Æt mieux la surface de Mars que les fonds marins de la Terre.",
        "ü•¶ Le brocoli contient plus de prot√©ines que certains morceaux de b≈ìuf‚Ä¶ oui, vraiment.",
        "üõèÔ∏è On passe environ un tiers de notre vie √† dormir, soit environ 25 ans !",
        "üìö La biblioth√®que du Vatican contient des textes qui n‚Äôont pas √©t√© lus depuis des si√®cles.",
        "ü¶µ Les autruches peuvent courir plus vite qu‚Äôun cheval‚Ä¶ et changer de direction net sans freiner.",
        "ü™ê Sur V√©nus, un jour dure plus longtemps qu‚Äôune ann√©e compl√®te !",
        "ü¶ú Certains perroquets peuvent apprendre plus de 100 mots humains‚Ä¶ et les utiliser √† bon escient.",
        "ü•ö En moyenne, une poule pond environ 300 ≈ìufs par an.",
        "üåª Les tournesols suivent r√©ellement le soleil dans le ciel quand ils grandissent. C‚Äôest l‚Äôh√©liotropisme.",
        "üìè Si tu pouvais plier une feuille de papier 42 fois, elle atteindrait la Lune.",
        "ü•∂ Le sang d‚Äôun poisson antarctique peut rester liquide m√™me en dessous de 0¬∞C gr√¢ce √† une prot√©ine antigel.",
        "üßÉ Le Coca-Cola serait vert sans colorant.",
        "üí° L‚Äôampoule √©lectrique la plus ancienne fonctionne depuis 1901, sans interruption.",
        "ü¶¥ Un os humain est plus r√©sistant qu‚Äôune barre de b√©ton √† taille √©gale."
    ]
    # Gestion de la demande "fait insolite"
    if any(mot in question_clean for mot in ["fait insolite", "truc fou", "surprends-moi", "anecdote", "incroyable mais vrai"]):
        if 'derniere_fait' not in st.session_state:
            st.session_state['derniere_fait'] = random.choice(faits_insolites)
        message_bot = f"‚ú® Voici un fait insolite :\n\n{st.session_state['derniere_fait']}"
    if message_bot:
        return message_bot       
      # Gestion de la demande "encore un" ou "plus" pour les faits insolites
    if not message_bot and any(m in question_clean for m in [
        "fait insolite", "truc fou", "surprends-moi", "anecdote", "incroyable mais vrai"
    ]):
        if 'derniere_fait' not in st.session_state:
            st.session_state['derniere_fait'] = random.choice(faits_insolites)
        message_bot = f"‚ú® Voici un fait insolite :\n\n{st.session_state['derniere_fait']}"
        return message_bot

    if not message_bot and any(m in question_clean for m in ["encore un", "un autre", "encore", "une autre"]):
        if 'derniere_fait' in st.session_state:
            message_bot = f"‚ú® Encore un :\n\n{random.choice(faits_insolites)}"
        else:
            message_bot = "‚ö†Ô∏è Je n'ai pas encore de fait insolite. Demandez d'abord un fait !"
        return message_bot
    if message_bot:
        return message_bot

    # --- Bloc Bonus: Analyse des phrases floues li√©es √† des sympt√¥mes courants ---
    if not message_bot and any(phrase in question_clean for phrase in [
        "mal √† la t√™te", "maux de t√™te", "j'ai de la fi√®vre", "fi√®vre", "mal √† la gorge",
        "mal au ventre", "toux", "je tousse", "je suis enrhum√©", "nez bouch√©", "j'ai chaud", "je transpire", "j'ai froid"
    ]):
        if "t√™te" in question_clean:
            message_bot = "üß† Vous avez mal √† la t√™te ? Cela peut √™tre une migraine, une fatigue ou une tension. Essayez de vous reposer et hydratez-vous bien."
        elif "fi√®vre" in question_clean or "j'ai chaud" in question_clean:
            message_bot = "üå°Ô∏è La fi√®vre est un signal du corps contre une infection. Restez hydrat√©, reposez-vous et surveillez votre temp√©rature."
        elif "gorge" in question_clean:
            message_bot = "üëÑ Un mal de gorge peut venir d‚Äôun rhume ou d‚Äôune angine. Buvez chaud, √©vitez de forcer sur la voix."
        elif "ventre" in question_clean:
            message_bot = "üçΩÔ∏è Maux de ventre ? Peut-√™tre digestif. All√©gez votre repas, buvez de l‚Äôeau ti√®de, et reposez-vous."
        elif "toux" in question_clean or "je tousse" in question_clean:
            message_bot = "üò∑ Une toux persistante m√©rite repos et hydratation. Si elle dure plus de 3 jours, pensez √† consulter."
        elif "nez" in question_clean:
            message_bot = "ü§ß Nez bouch√© ? Un bon lavage au s√©rum physiologique et une boisson chaude peuvent aider √† d√©gager les voies nasales."
        elif "transpire" in question_clean or "j'ai froid" in question_clean:
            message_bot = "ü•∂ Des frissons ? Cela peut √™tre li√© √† une pouss√©e de fi√®vre. Couvrez-vous l√©g√®rement, reposez-vous."
        return message_bot

    # --- Bloc Rem√®des naturels ---
    if not message_bot and any(phrase in question_clean for phrase in [
             "rem√®de", "solution naturelle", "astuce maison", "traitement doux", "soulager naturellement",
            "tisane", "huile essentielle", "remedes naturels", "plantes m√©dicinales", "rem√®de maison"
    ]):
        if "stress" in question_clean:
            message_bot = "üßò Pour le stress : tisane de camomille ou de val√©riane, respiration profonde, m√©ditation guid√©e ou bain ti√®de aux huiles essentielles de lavande."
        elif "mal de gorge" in question_clean or "gorge" in question_clean:
            message_bot = "üçØ Miel et citron dans une infusion chaude, gargarisme d‚Äôeau sal√©e ti√®de, ou infusion de thym. √âvite de trop parler et garde ta gorge bien hydrat√©e."
        elif "rhume" in question_clean or "nez bouch√©" in question_clean:
            message_bot = "üåø Inhalation de vapeur avec huile essentielle d‚Äôeucalyptus, tisane de gingembre, et bouillon chaud. Repose-toi bien."
        elif "fi√®vre" in question_clean:
            message_bot = "üßä Infusion de saule blanc, cataplasme de vinaigre de cidre sur le front, linge froid sur les poignets et repos absolu."
        elif "digestion" in question_clean or "ventre" in question_clean:
            message_bot = "üçµ Infusion de menthe poivr√©e ou fenouil, massage abdominal doux dans le sens des aiguilles d‚Äôune montre, alimentation l√©g√®re."
        elif "toux" in question_clean:
            message_bot = "üå∞ Sirop naturel √† base d‚Äôoignon et miel, infusion de thym, ou inhalation de vapeur chaude. √âvite les environnements secs."
        elif "insomnie" in question_clean or "sommeil" in question_clean:
            message_bot = "üåô Tisane de passiflore, val√©riane ou verveine. √âvite les √©crans avant le coucher, opte pour une routine calme et tamise la lumi√®re."
        elif "br√ªlure d'estomac" in question_clean or "reflux" in question_clean:
            message_bot = "üî• Une cuill√®re de gel d‚Äôaloe vera, infusion de camomille ou racine de guimauve. √âvite les repas copieux et mange lentement."
        elif "peau" in question_clean or "acn√©" in question_clean:
            message_bot = "üßº Masque au miel et curcuma, infusion de bardane, et hydratation r√©guli√®re. √âvite les produits agressifs."
        elif "fatigue" in question_clean:
            message_bot = "‚ö° Cure de gel√©e royale, infusion de ginseng ou d‚Äô√©leuth√©rocoque, alimentation riche en fruits et repos r√©gulier."
        elif "maux de t√™te" in question_clean or "migraine" in question_clean:
            message_bot = "üß† Huile essentielle de menthe poivr√©e sur les tempes, infusion de grande camomille ou compresse froide sur le front."
        elif "naus√©e" in question_clean:
            message_bot = "üçã Un peu de gingembre frais r√¢p√©, infusion de menthe douce ou respiration lente en position semi-allong√©e."
        elif "crampes" in question_clean:
            message_bot = "ü¶µ Eau citronn√©e, √©tirements doux, magn√©sium naturel via les graines, amandes ou bananes."
        elif "d√©pression" in question_clean:
            message_bot = "üñ§ Millepertuis (√† surveiller si tu prends d√©j√† un traitement), lumi√®re naturelle quotidienne, et activit√©s cr√©atives relaxantes."
        elif "allergie" in question_clean:
            message_bot = "üåº Pour soulager une allergie : infusion d‚Äôortie ou de rooibos, miel local, et rin√ßage nasal au s√©rum physiologique."
        elif "ecz√©ma" in question_clean or "d√©mangeaisons" in question_clean:
            message_bot = "ü©π Bain √† l‚Äôavoine collo√Ødale, gel d‚Äôaloe vera pur, huile de calendula ou cr√®me √† base de camomille."
        elif "arthrose" in question_clean or "articulations" in question_clean:
            message_bot = "ü¶¥ Curcuma, gingembre, infusion d‚Äôharpagophytum et cataplasme d‚Äôargile verte sur les articulations douloureuses."
        elif "ballonnements" in question_clean:
            message_bot = "üå¨Ô∏è Infusion de fenouil ou d‚Äôanis, charbon actif, marche l√©g√®re apr√®s le repas, et respiration abdominale."
        elif "anxi√©t√©" in question_clean:
            message_bot = "üßò‚Äç‚ôÄÔ∏è Respiration en coh√©rence cardiaque, huiles essentielles de lavande ou marjolaine, et bain ti√®de relaxant au sel d‚ÄôEpsom."
        elif "br√ªlure l√©g√®re" in question_clean or "br√ªlure" in question_clean:
            message_bot = "üî• Applique du gel d‚Äôaloe vera pur, ou une compresse froide au th√© noir infus√©. Ne perce jamais une cloque !"
        elif "circulation" in question_clean or "jambes lourdes" in question_clean:
            message_bot = "ü¶µ Bain de jambes √† la vigne rouge, infusion de ginkgo biloba, et sur√©l√©vation des jambes le soir."
        elif "foie" in question_clean or "digestion difficile" in question_clean:
            message_bot = "üçã Cure de radis noir, jus de citron ti√®de √† jeun, infusion de pissenlit ou d‚Äôartichaut."
        elif "yeux fatigu√©s" in question_clean:
            message_bot = "üëÅÔ∏è Compresse de camomille, repos visuel (20 secondes toutes les 20 min), et massage des tempes avec de l‚Äôhuile essentielle de rose."
        elif "syst√®me immunitaire" in question_clean or "immunit√©" in question_clean:
            message_bot = "üõ°Ô∏è Cure d‚Äô√©chinac√©e, gel√©e royale, infusion de thym et alimentation riche en vitamines C et D."
        elif "tensions musculaires" in question_clean:
            message_bot = "üíÜ‚Äç‚ôÇÔ∏è Massage √† l‚Äôhuile d‚Äôarnica, √©tirements doux, bain chaud avec du sel d‚ÄôEpsom, et infusion de m√©lisse."
        elif "transpiration excessive" in question_clean:
            message_bot = "üí¶ Sauge en infusion ou en d√©odorant naturel, porter du coton, et √©viter les plats √©pic√©s."
        elif "inflammation" in question_clean:
            message_bot = "üßÇ Cataplasme d‚Äôargile verte, infusion de curcuma et gingembre, ou massage √† l‚Äôhuile de millepertuis."
        else:
            message_bot = "üå± Je connais plein de rem√®des naturels ! Dites-moi pour quel sympt√¥me ou souci, et je vous propose une solution douce et efficace."
        
    

    # --- Bloc R√©ponses m√©dicales explicites ---
    if not message_bot and any(phrase in question_clean for phrase in [
        "grippe", "rhume", "fi√®vre", "migraine", "angine", "hypertension", "stress", "toux", "maux", "douleur",
        "asthme", "bronchite", "ecz√©ma", "diab√®te", "cholest√©rol", "acn√©", "ulc√®re", "an√©mie", "insomnie",
        "vertige", "br√ªlures", "reflux", "naus√©e", "d√©pression", "allergie", "palpitations", "otite", "sinusite",
        "crampes", "infections urinaires", "fatigue", "constipation", "diarrh√©e", "ballonnements", "br√ªlures d'estomac",
        "saignement de nez", "mal de dos", "entorse", "tendinite", "ampoule", "piq√ªre d‚Äôinsecte", "bruit dans l'oreille",
        "angoisse", "boutons de fi√®vre", "lombalgie", "p√©riarthrite", "hallux valgus", "hallucinations", "trouble du sommeil",
        "inflammation", "baisse de tension", "fi√®vre nocturne", "bradycardie", "tachycardie", "psoriasis", "fibromyalgie",
        "thyro√Øde", "cystite", "glaucome", "bruxisme", "arthrose", "hernie discale", "spasmophilie", "urticaire",
        "coup de chaleur", "luxation", "anxi√©t√©", "torticolis", "ecz√©ma de contact", "hypoglyc√©mie", "apn√©e du sommeil",
        "br√ªlure chimique", "ecz√©ma atopique", "syndrome des jambes sans repos", "colique n√©phr√©tique", "h√©patite",
        "pneumonie", "zona", "√©pilepsie", "coupure profonde", "h√©patite c", "phl√©bite", "gastro-ent√©rite",
        "blessure musculaire", "tendinopathie", "≈ìil rouge", "perte d'odorat"
    ]):

        reponses_medic = {
            "grippe": "ü§í Les sympt√¥mes de la grippe incluent : fi√®vre √©lev√©e, frissons, fatigue intense, toux s√®che, douleurs musculaires.",
            "rhume": "ü§ß Le rhume provoque g√©n√©ralement une congestion nasale, des √©ternuements, une l√©g√®re fatigue et parfois un peu de fi√®vre.",
            "fi√®vre": "üå°Ô∏è Pour faire baisser une fi√®vre, restez hydrat√©, reposez-vous, et prenez du parac√©tamol si besoin. Consultez si elle d√©passe 39¬∞C.",
            "migraine": "üß† Une migraine est une douleur pulsatile souvent localis√©e d‚Äôun c√¥t√© de la t√™te, pouvant s'accompagner de naus√©es et d'une sensibilit√© √† la lumi√®re.",
            "angine": "üëÑ L‚Äôangine provoque des maux de gorge intenses, parfois de la fi√®vre. Elle peut √™tre virale ou bact√©rienne.",
            "hypertension": "‚ù§Ô∏è L‚Äôhypertension est une pression sanguine trop √©lev√©e n√©cessitant un suivi m√©dical et une hygi√®ne de vie adapt√©e.",
            "stress": "üßò Le stress peut se soulager par des techniques de relaxation ou une activit√© physique mod√©r√©e.",
            "toux": "üò∑ Une toux s√®che peut √™tre le signe d'une irritation, tandis qu'une toux grasse aide √† √©vacuer les s√©cr√©tions. Hydratez-vous bien.",
            "maux": "ü§ï Pr√©cisez : maux de t√™te, de ventre, de dos ? Je peux vous donner des infos adapt√©es.",
            "douleur": "üí¢ Pour mieux vous aider, pr√©cisez la localisation ou l'intensit√© de la douleur.",
            "asthme": "ü´Å L‚Äôasthme se caract√©rise par une inflammation des voies respiratoires et des difficult√©s √† respirer, souvent soulag√©es par un inhalateur.",
            "bronchite": "ü´Å La bronchite est une inflammation des bronches, souvent accompagn√©e d'une toux persistante et parfois de fi√®vre. Reposez-vous et hydratez-vous.",
            "ecz√©ma": "ü©π L‚Äôecz√©ma est une inflammation de la peau provoquant d√©mangeaisons et rougeurs. Hydratez r√©guli√®rement et utilisez des cr√®mes apaisantes.",
            "diab√®te": "ü©∏ Le diab√®te affecte la r√©gulation du sucre dans le sang. Un suivi m√©dical, une alimentation √©quilibr√©e et une activit√© physique r√©guli√®re sont essentiels.",
            "cholest√©rol": "ü•ö Un taux √©lev√© de cholest√©rol peut √™tre r√©duit par une alimentation saine et de l'exercice. Consultez votre m√©decin pour un suivi personnalis√©.",
            "acn√©": "üí¢ L'acn√© est souvent trait√©e par une bonne hygi√®ne de la peau et, dans certains cas, des traitements sp√©cifiques. Consultez un dermatologue si n√©cessaire.",
            "ulc√®re": "ü©ª Les ulc√®res n√©cessitent un suivi m√©dical attentif, une modification de l'alimentation et parfois des traitements m√©dicamenteux sp√©cifiques.",
            "an√©mie": "ü©∏ Fatigue, p√¢leur, essoufflement. Manque de fer ? Misez sur viande rouge, lentilles, √©pinards !",
            "insomnie": "üåô Difficult√©s √† dormir ? √âvitez les √©crans avant le coucher, cr√©ez une routine apaisante.",
            "vertige": "üåÄ Perte d‚Äô√©quilibre, naus√©e ? Cela peut venir des oreilles internes. Reposez-vous et √©vitez les mouvements brusques.",
            "br√ªlures": "üî• Refroidissez rapidement la zone (eau ti√®de, jamais glac√©e), puis appliquez une cr√®me apaisante.",
            "reflux": "ü•¥ Br√ªlures d‚Äôestomac ? √âvitez les repas copieux, le caf√© et dormez la t√™te sur√©lev√©e.",
            "naus√©e": "ü§¢ Boissons fra√Æches, gingembre ou citron peuvent apaiser. Attention si vomissements r√©p√©t√©s.",
            "d√©pression": "üñ§ Fatigue, repli, tristesse persistante ? Parlez-en. Vous n‚Äô√™tes pas seul(e), des aides existent.",
            "allergie": "ü§ß √âternuements, d√©mangeaisons, yeux rouges ? Pollen, acariens ou poils ? Antihistaminiques peuvent aider.",
            "palpitations": "üíì Sensation de c≈ìur qui s‚Äôemballe ? Cela peut √™tre b√©nin, mais consultez si cela se r√©p√®te.",
            "otite": "üëÇ Douleur vive √† l‚Äôoreille, fi√®vre ? Surtout chez les enfants. Consultez sans tarder.",
            "sinusite": "üëÉ Pression au visage, nez bouch√©, fi√®vre ? Hydratez-vous, faites un lavage nasal, et consultez si n√©cessaire.",
            "crampes": "üí• Hydratez-vous, √©tirez les muscles concern√©s. Magn√©sium ou potassium peuvent aider.",
            "infections urinaires": "üöΩ Br√ªlures en urinant, besoin fr√©quent ? Buvez beaucoup d‚Äôeau et consultez rapidement.",
            "fatigue": "üò¥ Fatigue persistante ? Sommeil insuffisant, stress ou carences. √âcoutez votre corps, reposez-vous.",
            "constipation": "üöΩ Alimentation riche en fibres, hydratation et activit√© physique peuvent soulager naturellement.",
            "diarrh√©e": "üíß Boire beaucoup d‚Äôeau, manger du riz ou des bananes. Attention si cela persiste plus de 2 jours.",
            "ballonnements": "üå¨Ô∏è √âvitez les boissons gazeuses, mangez lentement, privil√©giez les aliments faciles √† dig√©rer.",
            "br√ªlures d‚Äôestomac": "üî• Sur√©levez votre t√™te la nuit, √©vitez les plats gras ou √©pic√©s. Un antiacide peut aider.",
            "saignement de nez": "ü©∏ Penchez la t√™te en avant, pincez le nez 10 minutes. Si r√©p√©titif, consultez.",
            "mal de dos": "üí∫ Mauvaise posture ? √âtirements doux, repos et parfois un coussin lombaire peuvent soulager.",
            "entorse": "ü¶∂ Glace, repos, compression, √©l√©vation (m√©thode GREC). Consultez si douleur intense.",
            "tendinite": "üí™ Repos de la zone, glace et mouvements doux. √âvitez les efforts r√©p√©titifs.",
            "ampoule": "ü¶∂ Ne percez pas. Nettoyez doucement, couvrez avec un pansement st√©rile.",
            "piq√ªre d‚Äôinsecte": "ü¶ü Rougeur, d√©mangeaison ? Lavez √† l‚Äôeau et au savon, appliquez un gel apaisant.",
            "bruit dans l'oreille": "üéß Acouph√®ne ? Bruit persistant dans l‚Äôoreille. Repos auditif, r√©duction du stress, consultez si persistant.",
            "angoisse": "üßò‚Äç‚ôÇÔ∏è Respiration profonde, exercices de pleine conscience, √©coutez votre corps. Parlez-en si n√©cessaire.",
            "boutons de fi√®vre": "üëÑ Herp√®s labial ? √âvitez le contact, appliquez une cr√®me sp√©cifique d√®s les premiers signes.",
            "lombalgie": "üßç‚Äç‚ôÇÔ∏è Douleur en bas du dos ? √âvitez les charges lourdes, dormez sur une surface ferme.",
            "p√©riarthrite": "ü¶¥ Inflammation autour d‚Äôune articulation. Froid local, repos, et anti-inflammatoires si besoin.",
            "hallux valgus": "üë£ D√©formation du gros orteil ? Port de chaussures larges, semelles sp√©ciales ou chirurgie selon le cas.",
            "bradycardie": "üíì Fr√©quence cardiaque anormalement basse. Peut √™tre normale chez les sportifs, mais √† surveiller si accompagn√©e de fatigue ou vertiges.",
            "tachycardie": "üíì Acc√©l√©ration du rythme cardiaque. Peut √™tre li√©e √† l‚Äôanxi√©t√©, la fi√®vre ou un probl√®me cardiaque. Consultez si cela se r√©p√®te.",
            "psoriasis": "ü©π Maladie de peau chronique provoquant des plaques rouges et squameuses. Hydratation et traitements locaux peuvent apaiser.",
            "fibromyalgie": "üòñ Douleurs diffuses, fatigue, troubles du sommeil. La relaxation, la marche douce et la gestion du stress peuvent aider.",
            "thyro√Øde": "ü¶ã Une thyro√Øde d√©r√©gl√©e peut causer fatigue, nervosit√©, prise ou perte de poids. Un bilan sanguin peut √©clairer la situation.",
            "cystite": "üöΩ Inflammation de la vessie, fr√©quente chez les femmes. Boire beaucoup d‚Äôeau et consulter si sympt√¥mes persistants.",
            "glaucome": "üëÅÔ∏è Maladie oculaire caus√©e par une pression intraoculaire √©lev√©e. Risque de perte de vision. Bilan ophtalmo conseill√©.",
            "bruxisme": "üò¨ Grincement des dents, souvent nocturne. Stress ou tension en cause. Une goutti√®re peut prot√©ger les dents.",
            "arthrose": "ü¶¥ Usure des articulations avec l'√¢ge. Douleurs, raideurs. Le mouvement doux est b√©n√©fique.",
            "hernie discale": "üßç‚Äç‚ôÇÔ∏è Douleur dans le dos irradiant vers les jambes. Une IRM peut confirmer. Repos, kin√©, parfois chirurgie.",
            "spasmophilie": "ü´Å Crises de tremblements, oppression, li√©es √† l‚Äôhyperventilation ou au stress. Respiration calme et magn√©sium peuvent aider.",
            "urticaire": "ü§Ø D√©mangeaisons soudaines, plaques rouges. Souvent allergique. Antihistaminiques efficaces dans la plupart des cas.",
            "coup de chaleur": "üî• Survient par forte chaleur. Fatigue, naus√©e, temp√©rature √©lev√©e. Refroidissement rapide n√©cessaire.",
            "luxation": "ü¶¥ D√©placement d‚Äôun os hors de son articulation. Douleur intense, immobilisation, urgence m√©dicale.",
            "anxi√©t√©": "üß† Tension int√©rieure, nervosit√©. La relaxation, la respiration guid√©e ou un suivi th√©rapeutique peuvent aider.",
            "torticolis": "üí¢ Douleur vive dans le cou, souvent due √† une mauvaise position ou un faux mouvement. Chaleur et repos sont recommand√©s.",
            "ecz√©ma de contact": "üåø R√©action cutan√©e suite √† un contact avec une substance. √âvitez le produit irritant et appliquez une cr√®me apaisante.",
            "hypoglyc√©mie": "ü©∏ Baisse de sucre dans le sang : fatigue, sueurs, vertiges. Une boisson sucr√©e ou un fruit aident √† r√©tablir rapidement.",
            "apn√©e du sommeil": "üò¥ Arr√™ts respiratoires nocturnes. Somnolence, fatigue. Une consultation sp√©cialis√©e est recommand√©e.",
            "br√ªlure chimique": "üß™ Rincer abondamment √† l‚Äôeau ti√®de (15-20 minutes) et consulter rapidement. Ne pas appliquer de produit sans avis m√©dical.",
            "ecz√©ma atopique": "üß¥ Forme chronique d‚Äôecz√©ma li√©e √† des allergies. Utilisez des cr√®mes hydratantes et √©vitez les allerg√®nes connus.",
            "syndrome des jambes sans repos": "ü¶µ Sensations d√©sagr√©ables dans les jambes le soir, besoin de bouger. Une bonne hygi√®ne de sommeil peut aider.",
            "colique n√©phr√©tique": "üßä Douleur intense dans le dos ou le c√¥t√©, souvent due √† un calcul r√©nal. Hydratation et consultation urgente recommand√©es.",
            "h√©patite": "ü©∏ Inflammation du foie, souvent virale. Fatigue, jaunisse, naus√©es. N√©cessite un suivi m√©dical.",
            "pneumonie": "ü´Å Infection pulmonaire s√©rieuse, accompagn√©e de fi√®vre, toux, et douleur thoracique. Consultez rapidement.",
            "zona": "üî• √âruption douloureuse sur une partie du corps. Cause : r√©activation du virus de la varicelle. Consultez d√®s les premiers signes.",
            "√©pilepsie": "‚ö° Trouble neurologique provoquant des crises. Suivi m√©dical strict indispensable.",
            "coupure profonde": "ü©π Nettoyez, appliquez une pression pour arr√™ter le saignement et consultez si elle est profonde ou large.",
            "h√©patite C": "üß¨ Infection virale du foie souvent silencieuse. Un d√©pistage est important pour un traitement efficace.",
            "phl√©bite": "ü¶µ Caillot dans une veine, souvent au mollet. Douleur, rougeur, chaleur. Consultez en urgence.",
            "gastro-ent√©rite": "ü§¢ Diarrh√©e, vomissements, crampes. Repos, hydratation et alimentation l√©g√®re sont essentiels.",
            "blessure musculaire": "üí™ Repos, glace et compression. √âvitez de forcer. √âtirement progressif apr√®s quelques jours.",
            "tendinopathie": "üéæ Inflammation des tendons suite √† un effort. Repos, glace et parfois kin√©sith√©rapie sont recommand√©s.",
            "≈ìil rouge": "üëÅÔ∏è Allergie, infection ou fatigue ? Si douleur ou vision floue, consultez rapidement.",
            "perte d'odorat": "üëÉ Souvent li√©e √† un virus comme la COVID-19. Hydratez-vous et surveillez les autres sympt√¥mes."

         }
        for cle, rep in reponses_medic.items():
            if cle in question_clean:
                message_bot = rep
                break
        return message_bot

    # --- Bloc R√©ponses g√©ographiques enrichi (restaur√© avec l'ancien bloc + pays en plus) ---
    if not message_bot and any(kw in question_clean for kw in ["capitale", "capitale de", "capitale du", "capitale d", "capitale des", "o√π se trouve", "ville principale", "ville de"]):
        pays_detecte = None
        match = re.search(r"(?:de la|de l'|du|de|des)\s+([a-z√†√¢√ß√©√®√™√´√Æ√Ø√¥√ª√π√º√ø√±√¶≈ì' -]+)", question_clean)
        if match:
            pays_detecte = match.group(1).strip().lower()
        else:
            tokens = question_clean.split()
            if len(tokens) >= 2:
                pays_detecte = tokens[-1].strip(" ?!.,;").lower()
        capitales = {
                "france"           : "Paris", 
                "espagne"          : "Madrid",
                "italie"           : "Rome",
                "allemagne"        : "Berlin",
                "japon"            : "Tokyo",
                "japonaise"        : "Tokyo",
                "chine"            : "P√©kin",
                "br√©sil"           : "Brasilia",
                "mexique"          : "Mexico",
                "canada"           : "Ottawa",
                "√©tats-unis"       : "Washington",
                "usa"              : "Washington",
                "united states"    : "Washington",
                "inde"             : "New Delhi",
                "portugal"         : "Lisbonne",
                "royaume-uni"      : "Londres",
                "angleterre"       : "Londres",
                "argentine"        : "Buenos Aires",
                "maroc"            : "Rabat",
                "alg√©rie"          : "Alger",
                "tunisie"          : "Tunis",
                "turquie"          : "Ankara",
                "russie"           : "Moscou",
                "russe"            : "Moscou",
                "australie"        : "Canberra",
                "cor√©e du sud"     : "S√©oul",
                "cor√©e"            : "S√©oul",
                "cor√©e du nord"    : "Pyongyang",
                "vietnam"          : "Hano√Ø",
                "thailande"        : "Bangkok",
                "indon√©sie"        : "Jakarta",
                "malaisie"         : "Kuala Lumpur",
                "singapour"        : "Singapour",
                "philippines"      : "Manille",
                "pakistan"         : "Islamabad",
                "bangladesh"       : "Dacca",
                "sri lanka"        : "Colombo",
                "n√©pal"            : "Katmandou",
                "iran"             : "T√©h√©ran",
                "irak"             : "Bagdad",
                "syrie"            : "Damas",
                "liban"            : "Beyrouth",
                "jordanie"         : "Amman",
                "isra√´l"           : "J√©rusalem",
                "palestine"        : "Ramallah",
                "qatar"            : "Doha",
                "oman"             : "Mascate",
                "y√©men"            : "Sanaa",
                "afghanistan"      : "Kaboul",
                "√©mirats arabes unis" : "Abou Dabi",
                "s√©n√©gal"          : "Dakar",
                "c√¥te d'ivoire"    : "Yamoussoukro",
                "mali"             : "Bamako",
                "niger"            : "Niamey",
                "tchad"            : "N'Djam√©na",
                "burkina faso"     : "Ouagadougou",
                "congo"            : "Brazzaville",
                "rd congo"         : "Kinshasa",
                "kenya"            : "Nairobi",
                "√©thiopie"         : "Addis-Abeba",
                "ghana"            : "Accra",
                "zambie"           : "Lusaka",
                "zimbabwe"         : "Harare",
                "soudan"           : "Khartoum",
                "botswana"         : "Gaborone",
                "namibie"          : "Windhoek",
                "madagascar"       : "Antananarivo",
                "mozambique"       : "Maputo",
                "angola"           : "Luanda",
                "libye"            : "Tripoli",
                "egypte"           : "Le Caire",
                "gr√®ce"            : "Ath√®nes",
                "pologne"          : "Varsovie",
                "ukraine"          : "Kyiv",
                "roumanie"         : "Bucarest",
                "bulgarie"         : "Sofia",
                "serbie"           : "Belgrade",
                "croatie"          : "Zagreb",
                "slov√©nie"         : "Ljubljana",
                "hongrie"          : "Budapest",
                "tch√©quie"         : "Prague",
                "slovaquie"        : "Bratislava",
                "su√®de"            : "Stockholm",
                "norv√®ge"          : "Oslo",
                "finlande"         : "Helsinki",
                "islande"          : "Reykjavik",
                "belgique"         : "Bruxelles",
                "pays-bas"         : "Amsterdam",
                "irlande"          : "Dublin",
                "suisse"           : "Berne",
                "colombie"         : "Bogota",
                "p√©rou"            : "Lima",
                "chili"            : "Santiago",
                "√©quateur"         : "Quito",
                "uruguay"          : "Montevideo",
                "paraguay"         : "Asuncion",
                "bolivie"          : "Sucre",
                "venezuela"        : "Caracas",
                "cuba"             : "La Havane",
                "ha√Øti"            : "Port-au-Prince",
                "r√©publique dominicaine" : "Saint-Domingue",
                "nicaragua"        : "Managua",
                "honduras"         : "Tegucigalpa",
                "guatemala"        : "Guatemala",
                "salvador"         : "San Salvador",
                "panama"           : "Panama",
                "costarica"        : "San Jos√©",
                "jama√Øque"         : "Kingston",
                "bahamas"          : "Nassau",
                "barbade"          : "Bridgetown",
                "trinit√©-et-tobago": "Port of Spain",
                "kazakhstan"       : "Noursoultan",
                "ouzbekistan"      : "Tachkent",
                "turkm√©nistan"     : "Achgabat",
                "kirghizistan"     : "Bichkek",
                "mongolie"         : "Oulan-Bator",
                "g√©orgie"          : "Tbilissi",
                "arm√©nie"          : "Erevan",
                "azerba√Ødjan"      : "Bakou",
                "nouvelles-z√©lande": "Wellington",
                "fidji"            : "Suva",
                "palaos"           : "Ngerulmud",
                "papouasie-nouvelle-guin√©e" : "Port Moresby",
                "samoa"            : "Apia",
                "tonga"            : "Nuku ªalofa",
                "vanuatu"          : "Port-Vila",
                "micron√©sie"       : "Palikir",
                "marshall"         : "Majuro",
                "tuvalu"           : "Funafuti",
                "bhoutan"          : "Thimphou",
                "maldives"         : "Mal√©",
                "laos"             : "Vientiane",
                "cambodge"         : "Phnom Penh",
                "brunei"           : "Bandar Seri Begawan",
                "timor oriental"   : "Dili",
                "somalie"           : "Mogadiscio",
                "tanzanie"          : "Dodoma",
                "ouganda"           : "Kampala",
                "rwanda"            : "Kigali",
                "burundi"           : "Bujumbura",
                "malawi"            : "Lilongwe",
                "sierra leone"      : "Freetown",
                "lib√©ria"           : "Monrovia",
                "guin√©e"            : "Conakry",
                "guin√©e-bissau"     : "Bissau",
                "guin√©e √©quatoriale": "Malabo",
                "gambie"            : "Banjul",
                "cap-vert"          : "Praia",
                "swaziland"         : "Mbabane",
                "lesotho"           : "Maseru",
                "b√©nin"             : "Porto-Novo",
                "togo"              : "Lom√©",
                "gabon"             : "Libreville",
                "r√©publique centrafricaine": "Bangui",
                "eswatini"          : "Mbabane",  # anciennement Swaziland
                "suriname"          : "Paramaribo",
                "guyana"            : "Georgetown",
                "dominique"         : "Roseau",
                "sainte-lucie"      : "Castries",
                "saint-vincent-et-les-grenadines": "Kingstown",
                "saint-christophe-et-ni√©v√®s"    : "Basseterre",
                "saint-marin"       : "Saint-Marin",
                "liechtenstein"     : "Vaduz",
                "andorre"           : "Andorre-la-Vieille",
                "vatican"           : "Vatican",
                "luxembourg"        : "Luxembourg",
                "mont√©n√©gro"        : "Podgorica",
                "mac√©doine du nord" : "Skopje",
                "bosnie-herz√©govine": "Sarajevo"

        }
        if pays_detecte and pays_detecte in capitales:
            message_bot = f"üìå La capitale de {pays_detecte.capitalize()} est {capitales[pays_detecte]}."
        else:
            message_bot = "üåç Je ne connais pas encore la capitale de ce pays. Essayez un autre !"

        return message_bot  # Ce return doit √™tre au m√™me niveau que l'if-else



    # --- Bloc Punchlines motivationnelles ---
    if not message_bot and any(kw in question_clean for kw in ["motivation", "punchline", "booster", "remotive", "inspire-moi"]):
        punchlines = [
            "üöÄ *N‚Äôattends pas les opportunit√©s. Cr√©e-les.*",
            "üî• *Chaque bougie japonaise est une chance de rebondir.*",
            "‚ö° *La discipline bat la chance sur le long terme.*",
            "üåü *Tu ne trades pas juste des actifs, tu construis ton avenir.*",
            "üí™ *M√™me dans un march√© baissier, ta volont√© peut monter en fl√®che.*",
            "üèÅ *Les gagnants n‚Äôabandonnent jamais, les perdants n‚Äôessaient m√™me pas.*",
            "üéØ *R√™ve grand, agis fort, ajuste vite.*",
            "‚è≥ *Le temps est ton meilleur alli√©‚Ä¶ ou ton pire ennemi.*",
            "üß† *Ce n‚Äôest pas le march√© qui te limite. C‚Äôest ta vision.*",
            "ü¶æ *Chaque difficult√© est une opportunit√© camoufl√©e.*",
            "üìà *Ta plus belle courbe, c‚Äôest celle de ta progression.*",
            "üíº *Travaille en silence, laisse tes gains faire le bruit.*",
            "üîÆ *Pr√©dis l‚Äôavenir ? Non. Pr√©pare-toi √† l‚Äô√©crire.*",
            "üåå *Le doute tue plus de r√™ves que l‚Äô√©chec.*",
            "üõ†Ô∏è *Construis-toi un mindset solide avant de construire ton portefeuille.*",
            "üß≠ *Quand tu sais o√π tu vas, m√™me les temp√™tes deviennent utiles.*"
         ]
        message_bot = random.choice(punchlines)
        return message_bot

    # --- Bloc Culture G√©n√©rale (questions simples) ---
    if not message_bot and any(mot in question_clean for mot in ["qui", "quand", "o√π", "combien", "quel", "quelle"]):
        base_connaissances = {
                "qui a invent√© internet": "üåê Internet a √©t√© d√©velopp√© principalement par **Vinton Cerf** et **Robert Kahn** dans les ann√©es 1970.",
                "qui est le fondateur de tesla": "‚ö° Elon Musk est l'un des cofondateurs et l'actuel PDG de **Tesla**.",
                "combien y a-t-il de pays dans le monde": "üåç Il y a actuellement **195 pays reconnus** dans le monde.",
                "quelle est la capitale de la france": "üìç La capitale de la France est **Paris**.",
                "quel est le plus grand oc√©an": "üåä L'oc√©an Pacifique est le plus grand au monde.",
                "qui a √©crit 'Les Mis√©rables'": "üìö **Victor Hugo** a √©crit *Les Mis√©rables*.",
                "quelle est la distance entre la terre et la lune": "üåï En moyenne, la distance est de **384 400 km** entre la Terre et la Lune.",
                "quel est l‚Äô√©l√©ment chimique o": "üß™ L'√©l√©ment chimique 'O' est **l'oxyg√®ne**.",
                "qui a √©crit rom√©o et juliette": "üé≠ C'est **William Shakespeare** qui a √©crit *Rom√©o et Juliette*.",
                "quelle est la langue la plus parl√©e au monde": "üó£Ô∏è Le **mandarin** est la langue la plus parl√©e au monde en nombre de locuteurs natifs.",
                "combien de continents existe-t-il": "üåé Il y a **7 continents** : Afrique, Am√©rique du Nord, Am√©rique du Sud, Antarctique, Asie, Europe, Oc√©anie.",
                "qui a march√© sur la lune en premier": "üë®‚ÄçüöÄ **Neil Armstrong** a √©t√© le premier homme √† marcher sur la Lune en 1969.",
                "quelle est la plus haute montagne du monde": "üèîÔ∏è L‚Äô**Everest** est la plus haute montagne du monde, culminant √† 8 848 m√®tres.",
                "combien y a-t-il d‚Äôos dans le corps humain": "ü¶¥ Le corps humain adulte compte **206 os**.",
                "qui a peint la joconde": "üñºÔ∏è C‚Äôest **L√©onard de Vinci** qui a peint *La Joconde*.",
                "quelle est la capitale du japon": "üèôÔ∏è La capitale du Japon est **Tokyo**.",
                "quelle plan√®te est la plus proche du soleil": "‚òÄÔ∏è **Mercure** est la plan√®te la plus proche du Soleil.",
                "qui a invent√© l‚Äô√©lectricit√©": "‚ö° L'√©lectricit√© n‚Äôa pas √©t√© invent√©e, mais **Benjamin Franklin** et **Thomas Edison** ont √©t√© des figures cl√©s dans sa compr√©hension et son exploitation.",
                "qu‚Äôest-ce que l‚Äôadn": "üß¨ L‚Äô**ADN** est le support de l‚Äôinformation g√©n√©tique chez tous les √™tres vivants.",
                "quelle est la plus grande for√™t du monde": "üå≥ L‚Äô**Amazonie** est la plus grande for√™t tropicale du monde.",
                "quel est l‚Äôanimal terrestre le plus rapide": "üêÜ Le **gu√©pard** peut atteindre jusqu‚Äô√† 110 km/h en vitesse de pointe.",
                "qui a √©crit harry potter": "üìö C‚Äôest **J.K. Rowling** qui a √©crit la saga *Harry Potter*.",
                "quelle est la temp√©rature de l‚Äôeau qui bout": "üíß L‚Äôeau bout √† **100¬∞C** √† pression atmosph√©rique normale.",
                "quel est le pays le plus peupl√©": "üë• **La Chine** est actuellement le pays le plus peupl√© du monde.",
                "quel est le plus long fleuve du monde": "üåä Le **Nil** est souvent consid√©r√© comme le plus long fleuve du monde, bien que certains estiment que c‚Äôest l‚ÄôAmazone.",
                "qui a d√©couvert l‚Äôam√©rique": "üó∫Ô∏è C‚Äôest **Christophe Colomb** qui a d√©couvert l‚ÄôAm√©rique en 1492, du moins pour l‚ÄôEurope.",
                "quelle est la plan√®te la plus grosse": "ü™ê **Jupiter** est la plus grosse plan√®te du syst√®me solaire.",
                "quelle est la vitesse de la lumi√®re": "‚ö° La lumi√®re voyage √† environ **299 792 km/s** dans le vide.",
                "combien de jours dans une ann√©e bissextile": "üìÖ Une ann√©e bissextile dure **366 jours**.",
                "quelle est la capitale de l‚Äôitalie": "üáÆüáπ La capitale de l‚ÄôItalie est **Rome**.",
                "qui a √©crit les mis√©rables": "üìñ C‚Äôest **Victor Hugo** qui a √©crit *Les Mis√©rables*.",
                "quelle est la capitale de l‚Äôallemagne": "üá©üá™ La capitale de l‚ÄôAllemagne est **Berlin**.",
                "qui est le pr√©sident de la france": "üá´üá∑ Le pr√©sident actuel de la France est **Emmanuel Macron** (en 2025).",
                "quelle est la profondeur de la fosse des mariannes": "üåä La fosse des Mariannes atteint environ **11 000 m√®tres** de profondeur.",
                "qui a invent√© le t√©l√©phone": "üìû **Alexander Graham Bell** est l‚Äôinventeur du t√©l√©phone.",
                "quelle est la langue officielle du br√©sil": "üáßüá∑ La langue officielle du Br√©sil est **le portugais**.",
                "combien de muscles dans le corps humain": "üí™ Le corps humain compte environ **650 muscles**.",
                "quelle est la capitale de la russie": "üá∑üá∫ La capitale de la Russie est **Moscou**.",
                "quand a eu lieu la r√©volution fran√ßaise": "‚öîÔ∏è La R√©volution fran√ßaise a commenc√© en **1789**.",
                "qui est le cr√©ateur de facebook": "üåê **Mark Zuckerberg** a cofond√© Facebook en 2004.",
                "quelle est la capitale de la chine": "üá®üá≥ La capitale de la Chine est **P√©kin**.",
                "quel est le plus grand animal terrestre": "üêò L‚Äô√©l√©phant d‚ÄôAfrique est le plus grand animal terrestre.",
                "combien de dents poss√®de un adulte": "ü¶∑ Un adulte a g√©n√©ralement 32 dents, y compris les dents de sagesse.",
                "comment se forme un arc-en-ciel": "üåà Il se forme quand la lumi√®re se r√©fracte et se r√©fl√©chit dans des gouttelettes d‚Äôeau.",
                "quelle est la temp√©rature normale du corps humain": "üå°Ô∏è Elle est d‚Äôenviron 36,5 √† 37¬∞C.",
                "quelle plan√®te est la plus proche du soleil": "‚òÄÔ∏è C‚Äôest **Mercure**, la plus proche du Soleil.",
                "combien y a-t-il de continents": "üåç Il y a **7 continents** : Afrique, Am√©rique du Nord, Am√©rique du Sud, Antarctique, Asie, Europe, Oc√©anie.",
                "quelle est la capitale du br√©sil": "üáßüá∑ La capitale du Br√©sil est **Brasilia**.",
                "quelle est la langue parl√©e au mexique": "üá≤üáΩ La langue officielle du Mexique est l‚Äô**espagnol**.",
                "qu'est-ce qu'une √©clipse lunaire": "üåï C‚Äôest quand la Lune passe dans l‚Äôombre de la Terre, elle peut appara√Ætre rouge√¢tre.",
                "quelle est la formule de l‚Äôeau": "üíß La formule chimique de l‚Äôeau est **H‚ÇÇO**.",
                "qu'est-ce que le code binaire": "üßÆ Le code binaire est un langage informatique utilisant seulement des 0 et des 1.",
                "quelle est la plus haute montagne du monde": "üèîÔ∏è L'**Everest** est la plus haute montagne du monde, culminant √† 8 848 m√®tres.",       
                "quelle est la langue officielle du japon": "üáØüáµ La langue officielle du Japon est le **japonais**.",
                "quelle est la capitale de l'italie": "üáÆüáπ La capitale de l'Italie est **Rome**.",
                "combien y a-t-il de pays en Europe": "üåç L‚ÄôEurope compte **44 pays**, dont la Russie qui en fait partie partiellement.",
                "quel est le plus long fleuve du monde": "üåä Le **Nil** est souvent consid√©r√© comme le plus long fleuve du monde, bien que certains estiment que c‚Äôest l‚ÄôAmazone.",
                "quel est le plus grand oc√©an du monde": "üåä Le **Pacifique** est le plus grand oc√©an, couvrant environ un tiers de la surface de la Terre.",
                "combien de pays parlent espagnol": "üá™üá∏ Il y a **21 pays** dans le monde o√π l'espagnol est la langue officielle.",
                "qu'est-ce qu'un trou noir": "üåå Un trou noir est une r√©gion de l‚Äôespace o√π la gravit√© est tellement forte que rien, m√™me pas la lumi√®re, ne peut s‚Äôen √©chapper.",
                "qu'est-ce qu'une √©clipse solaire": "üåû Une √©clipse solaire se produit lorsque la Lune passe entre la Terre et le Soleil, obscurcissant temporairement notre √©toile.",
                "qu'est-ce que le big bang": "üí• Le **Big Bang** est la th√©orie scientifique qui d√©crit l'origine de l'univers √† partir d'un point extr√™mement dense et chaud il y a environ 13,8 milliards d'ann√©es.",
                "combien y a-t-il de dents de lait chez un enfant": "ü¶∑ Un enfant a g√©n√©ralement **20 dents de lait**, qui commencent √† tomber vers 6 ans.",
                "quel est l'animal le plus rapide au monde": "üêÜ Le **gu√©pard** est l‚Äôanimal terrestre le plus rapide, atteignant une vitesse de 112 km/h.",
                "quelle est la temp√©rature d'√©bullition de l'eau": "üíß L'eau bout √† **100¬∞C** √† une pression normale (1 atmosph√®re).",
                "combien de langues sont parl√©es dans le monde": "üåç Il y a environ **7 000 langues** parl√©es dans le monde aujourd'hui.",
                "qu'est-ce que l'effet de serre": "üåç L'effet de serre est un ph√©nom√®ne naturel o√π certains gaz dans l'atmosph√®re retiennent la chaleur du Soleil, mais il est amplifi√© par les activit√©s humaines.",
                # üåç M√©t√©o & nature
                "quelle est la temp√©rature id√©ale pour un √™tre humain": "üå°Ô∏è La temp√©rature corporelle id√©ale est autour de 36,5 √† 37¬∞C.",
                "qu'est-ce qu'un ouragan": "üåÄ Un ouragan est une temp√™te tropicale tr√®s puissante, form√©e au-dessus des oc√©ans chauds.",
                "comment se forme un arc-en-ciel": "üåà Un arc-en-ciel se forme par la r√©fraction, la r√©flexion et la dispersion de la lumi√®re dans les gouttelettes d'eau.",
                "quelle est la temp√©rature id√©ale pour un √™tre humain": "üå°Ô∏è La temp√©rature corporelle id√©ale est autour de 36,5 √† 37¬∞C.",
                "qu'est-ce qu'un ouragan": "üåÄ Un ouragan est une temp√™te tropicale tr√®s puissante, form√©e au-dessus des oc√©ans chauds.",
                "comment se forme un arc-en-ciel": "üåà Un arc-en-ciel se forme par la r√©fraction, la r√©flexion et la dispersion de la lumi√®re dans les gouttelettes d'eau.",
                "qu'est-ce qu'une tornade": "üå™Ô∏è Une tornade est une colonne d'air en rotation rapide qui touche le sol, souvent destructrice.",
                "quelle est la temp√©rature la plus basse jamais enregistr√©e": "‚ùÑÔ∏è La temp√©rature la plus basse a √©t√© enregistr√©e en Antarctique : -89,2¬∞C √† la station Vostok.",
                "pourquoi le ciel est bleu": "‚òÄÔ∏è La lumi√®re du Soleil se diffuse dans l‚Äôatmosph√®re. Le bleu est plus dispers√©, d'o√π la couleur du ciel.",
                "pourquoi les feuilles tombent en automne": "üçÇ Les arbres perdent leurs feuilles pour √©conomiser de l‚Äôeau et de l‚Äô√©nergie pendant l‚Äôhiver.",
                "comment na√Æt un orage": "‚ö° Un orage na√Æt d‚Äôun choc thermique entre de l‚Äôair chaud et humide et de l‚Äôair froid en altitude.",
                "qu'est-ce que le changement climatique": "üåç C‚Äôest l'√©volution √† long terme du climat de la Terre, caus√©e en partie par les activit√©s humaines.",
                "comment se forme la neige": "‚ùÑÔ∏è La neige se forme quand les gouttelettes d‚Äôeau dans les nuages g√®lent et tombent sous forme de cristaux.",
                "qu'est-ce qu'un tsunami": "üåä Un tsunami est une vague g√©ante caus√©e par un s√©isme ou une √©ruption sous-marine.",
                "qu'est-ce qu'un s√©isme": "üåç Un s√©isme est un tremblement de terre provoqu√© par des mouvements de plaques tectoniques.",
                "pourquoi y a-t-il des saisons": "üå¶Ô∏è Les saisons existent √† cause de l‚Äôinclinaison de la Terre sur son axe et de sa r√©volution autour du Soleil.",
                "c'est quoi une mar√©e": "üåä Une mar√©e est le mouvement p√©riodique de mont√©e et de descente du niveau de la mer, influenc√© par la Lune.",
                "comment se forment les nuages": "‚òÅÔ∏è Les nuages se forment lorsque la vapeur d‚Äôeau se condense autour de particules fines dans l‚Äôair.",
                "qu'est-ce que le r√©chauffement climatique": "üî• Le r√©chauffement climatique est l‚Äôaugmentation progressive de la temp√©rature moyenne de la Terre, principalement due aux gaz √† effet de serre.",
                "qu'est-ce qu'une √©ruption volcanique": "üåã C‚Äôest l‚Äôexpulsion de lave, cendres et gaz par un volcan en activit√©.",
                "quelle est la temp√©rature moyenne sur Terre": "üåç La temp√©rature moyenne sur Terre est d‚Äôenviron 15¬∞C, mais elle varie selon les r√©gions et les saisons.",
                "quels sont les gaz √† effet de serre": "üí® Dioxyde de carbone, m√©thane, vapeur d‚Äôeau, ozone‚Ä¶ ce sont les principaux gaz responsables du r√©chauffement climatique.",
    
                # üêæ Animaux
                "combien de c≈ìurs a une pieuvre": "üêô Une pieuvre a **trois c≈ìurs** ! Deux pour les branchies et un pour le corps.",
                "quel est l‚Äôanimal le plus rapide du monde": "üêÜ Le gu√©pard est l‚Äôanimal terrestre le plus rapide, avec une pointe √† 112 km/h.",
                "quel animal pond des ≈ìufs mais allaite": "ü¶ò L‚Äôornithorynque ! Un mammif√®re unique qui pond des ≈ìufs et allaite ses petits.",
                "quel est l‚Äôanimal le plus grand du monde": "üêã La **baleine bleue** est l‚Äôanimal le plus grand, pouvant d√©passer 30 m√®tres de long.",
                "quel est l‚Äôanimal le plus petit": "ü¶† Le **colibri d‚ÄôH√©l√®ne** est l‚Äôun des plus petits oiseaux, pesant moins de 2 grammes.",
                "quel animal vit le plus longtemps": "üê¢ La **tortue g√©ante** peut vivre plus de 150 ans !",
                "quel est l‚Äôoiseau qui ne vole pas": "üêß Le **manchot** est un oiseau qui ne vole pas mais excelle dans l‚Äôeau.",
                "quel animal change de couleur": "ü¶é Le **cam√©l√©on** peut changer de couleur pour se camoufler ou communiquer.",
                "quels animaux hibernent": "üêª L‚Äôours, la marmotte ou encore le h√©risson **hibernent** pendant l‚Äôhiver.",
                "quel animal a la meilleure vue": "ü¶Ö L‚Äô**aigle** a une vue per√ßante, capable de rep√©rer une proie √† des kilom√®tres.",
                "quel est le plus gros f√©lin": "üêÖ Le **tigre de Sib√©rie** est le plus gros des f√©lins sauvages.",
                "quel animal pond le plus d'≈ìufs": "üêî La **poule** peut pondre jusqu‚Äô√† 300 ≈ìufs par an, mais certains poissons comme le cabillaud pondent des millions d'≈ìufs !",
                "quel animal vit dans les abysses": "üåå Le **poisson-lanterne** est l‚Äôun des habitants √©tranges des abysses marins.",
                "quels animaux vivent en meute": "üê∫ Les **loups**, les **chiens sauvages** ou encore les **hy√®nes** vivent en meute pour chasser.",
                "quel animal a la langue la plus longue": "üëÖ Le **cam√©l√©on** peut projeter sa langue jusqu‚Äô√† deux fois la longueur de son corps.",
                "quel animal a le venin le plus mortel": "‚ò†Ô∏è Le **c√¥ne g√©ographique**, un petit escargot marin, poss√®de un venin redoutable.",
                "quel est l‚Äôanimal le plus rapide dans l‚Äôeau": "üê¨ Le **voilier de l‚ÄôIndo-Pacifique** peut nager √† pr√®s de 110 km/h !",
                "quel est le cri du renard": "ü¶ä Le renard pousse un cri strident, souvent assimil√© √† un hurlement ou un aboiement sec.",
                "quel animal peut survivre dans l‚Äôespace": "üõ∞Ô∏è Le **tardigrade**, aussi appel√© ourson d‚Äôeau, est capable de survivre au vide spatial.",
                "quels animaux sont nocturnes": "üåô Les **chauves-souris**, **hiboux** ou encore **f√©lins** sont actifs principalement la nuit.",
                "quel est l‚Äôanimal le plus bruyant": "üì£ Le **cachalot** √©met les sons les plus puissants du r√®gne animal, jusqu'√† 230 d√©cibels !",
                "quel animal a le plus grand nombre de dents": "ü¶à Le **requin** peut avoir jusqu‚Äô√† **3000 dents**, renouvel√©es en permanence.",
                "quel est l‚Äôanimal le plus intelligent": "üß† Le **dauphin** est l‚Äôun des animaux les plus intelligents, capable d‚Äôutiliser des outils et de communiquer de mani√®re complexe.",
                "quel animal dort le moins": "üåô La **girafe** dort moins de 2 heures par jour en moyenne.",
                "quel animal a le plus de pattes": "ü™± Le **mille-pattes Illacme plenipes** peut avoir jusqu‚Äô√† **750 pattes** !",
                "quel animal peut marcher sur l‚Äôeau": "ü¶é Le **basilic** est surnomm√© 'l√©zard J√©sus-Christ' car il peut courir sur l‚Äôeau.",
                "quel animal est immortel": "‚ôæÔ∏è La **m√©duse Turritopsis dohrnii** peut retourner √† son stade juv√©nile, ce qui la rend th√©oriquement immortelle.",
                "quel animal a la meilleure ou√Øe": "üëÇ Le **grand duc** et la **chauve-souris** sont champions de l‚Äôaudition, capables d‚Äôentendre des ultrasons imperceptibles pour nous.",
                "quel est l‚Äôanimal le plus toxique": "‚ò†Ô∏è La **grenouille dor√©e** d‚ÄôAm√©rique du Sud produit une toxine mortelle, m√™me en tr√®s faible dose.",
                "quel est l‚Äôanimal le plus ancien": "‚è≥ Le **trilobite**, aujourd‚Äôhui disparu, est l‚Äôun des premiers animaux complexes, apparu il y a plus de 500 millions d‚Äôann√©es.",

    
                # üî¨ Science
                "qu'est-ce que la gravit√©": "üåå La gravit√© est une force qui attire deux masses l'une vers l'autre, comme la Terre attire les objets vers elle.",
                "combien de plan√®tes dans le syst√®me solaire": "ü™ê Il y a 8 plan√®tes : Mercure, V√©nus, Terre, Mars, Jupiter, Saturne, Uranus, Neptune.",
                "quelle est la plus petite particule": "‚öõÔ∏è Le quark est l'une des plus petites particules connues dans la physique quantique.",
                "qu'est-ce qu'un atome": "‚öõÔ∏è Un **atome** est la plus petite unit√© de mati√®re, compos√©e d‚Äô√©lectrons, de protons et de neutrons.",
                "quelle est la diff√©rence entre masse et poids": "‚öñÔ∏è La **masse** est constante, le **poids** d√©pend de la gravit√©. On p√®se moins sur la Lune que sur Terre !",
                "qu'est-ce que l'effet de serre": "üåç L‚Äô**effet de serre** est un ph√©nom√®ne naturel qui retient la chaleur dans l‚Äôatmosph√®re gr√¢ce √† certains gaz.",
                "qu'est-ce qu'un trou noir": "üï≥Ô∏è Un **trou noir** est une r√©gion de l‚Äôespace o√π la gravit√© est si forte que m√™me la lumi√®re ne peut s‚Äôen √©chapper.",
                "quelle est la vitesse de la lumi√®re": "üí° Environ **299 792 km/s**. C‚Äôest la vitesse maximale dans l‚Äôunivers selon la physique actuelle.",
                "qu'est-ce que l'ADN": "üß¨ L‚Äô**ADN** est la mol√©cule qui contient toutes les instructions g√©n√©tiques d‚Äôun √™tre vivant.",
                "comment fonctionne un aimant": "üß≤ Un **aimant** attire certains m√©taux gr√¢ce √† un champ magn√©tique g√©n√©r√© par ses √©lectrons.",
                "qu'est-ce que l'√©lectricit√©": "‚ö° C‚Äôest un flux de particules appel√©es **√©lectrons** circulant dans un conducteur.",
                "qu'est-ce que le big bang": "üåå Le **Big Bang** est la th√©orie selon laquelle l‚Äôunivers a commenc√© par une √©norme explosion il y a 13,8 milliards d‚Äôann√©es.",
                "comment se forme une √©toile": "‚≠ê Une **√©toile** na√Æt dans un nuage de gaz et de poussi√®re qui s‚Äôeffondre sous sa propre gravit√©.",
                "qu'est-ce que l‚ÄôADN": "üß¨ L‚ÄôADN est une mol√©cule porteuse d'informations g√©n√©tiques, pr√©sente dans chaque cellule.",
                "qu'est-ce que la photosynth√®se": "üå± C‚Äôest le processus par lequel les plantes transforment la lumi√®re du soleil en √©nergie.",
                "qu'est-ce qu'une √©clipse": "üåë Une **√©clipse** se produit quand la Lune ou la Terre se place entre le Soleil et l‚Äôautre corps, bloquant partiellement la lumi√®re.",
                "quelle est la temp√©rature du soleil": "‚òÄÔ∏è La surface du Soleil atteint environ **5 500¬∞C**, mais son noyau d√©passe les **15 millions de degr√©s** !",
                "qu'est-ce qu'un vaccin": "üíâ Un **vaccin** stimule le syst√®me immunitaire pour qu‚Äôil apprenne √† se d√©fendre contre un virus ou une bact√©rie.",
                "c‚Äôest quoi un neutron": "üß™ Un **neutron** est une particule subatomique pr√©sente dans le noyau des atomes, sans charge √©lectrique.",
                "qu'est-ce que la mati√®re noire": "üåå La **mati√®re noire** est une substance invisible qui compose une grande partie de l‚Äôunivers, d√©tect√©e uniquement par ses effets gravitationnels.",
                "qu'est-ce qu'une cellule souche": "üß´ Une **cellule souche** peut se transformer en diff√©rents types de cellules sp√©cialis√©es. Elle est essentielle en m√©decine r√©g√©n√©rative.",
                "quelle est la diff√©rence entre virus et bact√©rie": "ü¶† Les **bact√©ries** sont des organismes vivants autonomes, les **virus** ont besoin d'une cellule pour se reproduire.",
                "comment fonctionne un laser": "üî¥ Un **laser** produit un faisceau lumineux tr√®s concentr√© en amplifiant la lumi√®re dans une seule direction.",
                "comment vole un avion": "‚úàÔ∏è Gr√¢ce √† la **portance** g√©n√©r√©e par les ailes. L‚Äôair circule plus vite au-dessus qu‚Äôen dessous, ce qui cr√©e une force vers le haut.",
                "qu'est-ce que l‚Äôintelligence artificielle": "ü§ñ L‚Äô**IA** est un ensemble de technologies qui permettent √† des machines d‚Äôimiter certaines fonctions humaines comme apprendre ou r√©soudre des probl√®mes.",
                "qu'est-ce que l‚ÄôARN": "üß¨ L‚Äô**ARN** est une mol√©cule qui transmet les instructions g√©n√©tiques de l‚ÄôADN pour produire des prot√©ines.",
                "comment na√Æt un arc √©lectrique": "‚ö° Un **arc √©lectrique** se forme quand un courant saute dans l‚Äôair entre deux conducteurs, comme dans un √©clair ou un poste haute tension.",
                "qu'est-ce qu‚Äôun proton": "üß™ Un **proton** est une particule subatomique √† charge positive, pr√©sente dans le noyau des atomes.",
                "comment fonctionne une fus√©e": "üöÄ Une **fus√©e** avance en projetant des gaz √† grande vitesse vers l‚Äôarri√®re, selon le principe d‚Äôaction-r√©action de Newton.",
    
                # üìö Histoire
                "qui √©tait napol√©on": "üëë Napol√©on Bonaparte √©tait un empereur fran√ßais du XIXe si√®cle, c√©l√®bre pour ses conqu√™tes militaires.",
                "en quelle ann√©e la tour eiffel a √©t√© construite": "üóº Elle a √©t√© achev√©e en **1889** pour l'Exposition universelle de Paris.",
                "quelle guerre a eu lieu en 1914": "‚öîÔ∏è La Premi√®re Guerre mondiale a commenc√© en 1914 et s'est termin√©e en 1918.","qui a d√©couvert l'am√©rique": "üåé **Christophe Colomb** a d√©couvert l‚ÄôAm√©rique en 1492, m√™me si des peuples y vivaient d√©j√†.",
                "quand a eu lieu la r√©volution fran√ßaise": "‚öîÔ∏è La **R√©volution fran√ßaise** a commenc√© en **1789** et a profond√©ment chang√© la soci√©t√© fran√ßaise.",
                "qui √©tait cl√©op√¢tre": "üëë **Cl√©op√¢tre** √©tait la derni√®re reine d'√âgypte, c√©l√®bre pour son intelligence et son alliance avec Jules C√©sar.",
                "quand a eu lieu la seconde guerre mondiale": "üåç La **Seconde Guerre mondiale** a dur√© de **1939 √† 1945** et impliqu√© de nombreux pays du globe.",
                "qui √©tait charlemagne": "üõ°Ô∏è **Charlemagne** √©tait un empereur franc du Moyen √Çge, consid√©r√© comme le p√®re de l‚ÄôEurope.",
                "qui a construit les pyramides": "üî∫ Les **anciens √âgyptiens** ont construit les pyramides il y a plus de 4 500 ans comme tombes pour les pharaons.",
                "quand l‚Äôhomme a-t-il march√© sur la lune": "üåï **Neil Armstrong** a pos√© le pied sur la Lune le **20 juillet 1969** lors de la mission Apollo 11.",
                "qui √©tait hitler": "‚ö†Ô∏è **Adolf Hitler** √©tait le dictateur de l‚ÄôAllemagne nazie, responsable de la Seconde Guerre mondiale et de la Shoah.",
                "qu‚Äôest-ce que la guerre froide": "üßä La **guerre froide** fut une p√©riode de tension entre les √âtats-Unis et l‚ÄôURSS entre 1947 et 1991, sans affrontement direct.",
                "qui a invent√© l‚Äôimprimerie": "üñ®Ô∏è **Gutenberg** a invent√© l‚Äôimprimerie moderne au 15e si√®cle, r√©volutionnant la diffusion du savoir.",
                "qui √©tait louis xiv": "üëë **Louis XIV**, aussi appel√© le Roi Soleil, a r√©gn√© sur la France pendant 72 ans, de 1643 √† 1715.",
                "quelle est la plus ancienne civilisation connue": "üè∫ La **civilisation sum√©rienne** en M√©sopotamie est l‚Äôune des plus anciennes connues, datant de -3000 av. J.-C.",
                "quand a √©t√© sign√©e la d√©claration des droits de l‚Äôhomme": "üìù En **1789**, pendant la R√©volution fran√ßaise.",
                "qu‚Äôest-ce que la renaissance": "üé® Une p√©riode de renouveau artistique et scientifique en Europe, entre le 14e et le 17e si√®cle.",
                "qui a aboli l‚Äôesclavage en france": "‚úä **Victor Schoelcher** a jou√© un r√¥le cl√© dans l‚Äôabolition de l‚Äôesclavage en 1848 en France.",
                "qui √©tait jules c√©sar": "üèõÔ∏è **Jules C√©sar** √©tait un g√©n√©ral et homme politique romain, c√©l√®bre pour avoir transform√© la R√©publique romaine en Empire.",
                "quand a eu lieu la chute de l‚Äôempire romain": "üè∞ Elle a eu lieu en **476 apr√®s J.-C.**, marquant la fin de l‚ÄôAntiquit√© en Europe occidentale.",
                "quand a √©t√© fond√©e la r√©publique fran√ßaise": "üá´üá∑ La **Premi√®re R√©publique fran√ßaise** a √©t√© proclam√©e en **1792**, apr√®s la chute de la monarchie.",
                "qu‚Äôest-ce que la r√©volution industrielle": "‚öôÔ∏è Une p√©riode de profonds changements √©conomiques et technologiques entre le 18e et le 19e si√®cle.",
                "qui a d√©clench√© la premi√®re guerre mondiale": "üî´ L‚Äôassassinat de **l‚Äôarchiduc Fran√ßois-Ferdinand** d‚ÄôAutriche en 1914 a √©t√© l‚Äô√©l√©ment d√©clencheur.",
                "qu‚Äôest-ce que le mur de berlin": "üß± Le **mur de Berlin** s√©parait l‚ÄôAllemagne de l‚ÄôEst et de l‚ÄôOuest de 1961 √† 1989, symbole de la guerre froide.",
                "qui √©tait marie-antoinette": "üëë **Marie-Antoinette** √©tait la reine de France √©pouse de Louis XVI, ex√©cut√©e pendant la R√©volution fran√ßaise.",
                "quand a √©t√© sign√© le trait√© de versailles": "üìú Le **trait√© de Versailles** a √©t√© sign√© en **1919** pour mettre fin √† la Premi√®re Guerre mondiale.",
                "quand a commenc√© l‚Äôantiquit√©": "üè∫ L‚Äô**Antiquit√©** commence vers **-3000 av. J.-C.** avec l‚Äôinvention de l‚Äô√©criture.",
    
                # üß† Connaissances g√©n√©rales
                "quelle est la langue officielle du br√©sil": "üáßüá∑ C‚Äôest le **portugais**.",
                "combien de dents a un adulte": "ü¶∑ Un adulte poss√®de g√©n√©ralement **32 dents**.",
                "qu'est-ce que le code morse": "üì° C‚Äôest un syst√®me de communication utilisant des points et des tirets.",
                "quelle est la langue la plus parl√©e au monde": "üó£Ô∏è Le mandarin (chinois) est la langue la plus parl√©e au monde en nombre de locuteurs natifs.",
                "quelle est la langue officielle du br√©sil": "üáßüá∑ La langue officielle du Br√©sil est le **portugais**.",
                "combien de dents a un adulte": "ü¶∑ Un adulte poss√®de g√©n√©ralement **32 dents**.",
                "qu'est-ce que le code morse": "üì° C‚Äôest un syst√®me de communication utilisant des points et des tirets pour repr√©senter des lettres.",
                "qui a invent√© l'imprimerie": "üñ®Ô∏è **Johannes Gutenberg** a invent√© l'imprimerie moderne vers 1450.",
                "quel est l‚Äôaliment le plus consomm√© au monde": "üçö Le **riz** est l‚Äôun des aliments les plus consomm√©s sur la plan√®te.",
                "combien de litres d‚Äôeau faut-il pour faire un jean": "üëñ Il faut environ **7 000 √† 10 000 litres** d'eau pour fabriquer un seul jean.",
                "quel est l'objet le plus utilis√© au quotidien": "üì± Le **t√©l√©phone portable** est l‚Äôobjet le plus utilis√© au quotidien.",
                "qu‚Äôest-ce que le pH": "üß™ Le pH mesure l‚Äôacidit√© ou l‚Äôalcalinit√© d‚Äôune solution, de 0 (acide) √† 14 (alcalin).",
                "combien de pays font partie de l‚ÄôUnion europ√©enne": "üá™üá∫ L‚ÄôUnion europ√©enne regroupe **27 pays membres** (apr√®s le Brexit).",
                "combien de lettres dans l‚Äôalphabet": "üî§ L‚Äôalphabet latin compte **26 lettres**.",
                "quelle est la monnaie du japon": "üí¥ La monnaie du Japon est le **yen**.",
                "quel est le sport le plus pratiqu√© dans le monde": "‚öΩ Le football est le sport le plus populaire et pratiqu√© dans le monde.",
                "qu‚Äôest-ce qu‚Äôun QR code": "üî≥ Un QR code est un code barre 2D qui peut contenir des liens, des infos ou des paiements.",
                "qu‚Äôest-ce qu‚Äôun satellite": "üõ∞Ô∏è Un satellite est un objet plac√© en orbite autour d'une plan√®te pour collecter ou transmettre des donn√©es.",
                "que veut dire wifi": "üì∂ Wi-Fi signifie **Wireless Fidelity**, une technologie sans fil pour transmettre des donn√©es.",
                "combien y a-t-il de c√¥t√©s dans un hexagone": "üî∫ Un hexagone a **6 c√¥t√©s**.",
                "qu‚Äôest-ce que l‚ÄôADN": "üß¨ L‚ÄôADN (acide d√©soxyribonucl√©ique) contient toutes les informations g√©n√©tiques d‚Äôun √™tre vivant.",
                "quelle est la capitale de l‚ÄôEspagne": "üá™üá∏ La capitale de l‚ÄôEspagne est **Madrid**.",
                "quelle est la monnaie des √âtats-Unis": "üíµ La monnaie des √âtats-Unis est le **dollar am√©ricain**.",
                "qu‚Äôest-ce que la photosynth√®se": "üå± La photosynth√®se est le processus par lequel les plantes transforment la lumi√®re du soleil en √©nergie.",
                "combien de secondes dans une heure": "‚è±Ô∏è Il y a **3 600 secondes** dans une heure.",
                "qu‚Äôest-ce qu‚Äôun volcan": "üåã C‚Äôest une ouverture de la cro√ªte terrestre par laquelle s‚Äô√©chappent des gaz, des cendres et de la lave.",
                "qu‚Äôest-ce qu‚Äôune √©clipse solaire": "üåûüåë C‚Äôest quand la Lune passe entre la Terre et le Soleil, cachant partiellement ou totalement la lumi√®re du Soleil.",
                "quelle est la mer la plus sal√©e": "üßÇ La **mer Morte** est la plus sal√©e au monde, avec une salinit√© extr√™me.",
                "qu‚Äôest-ce que l‚Äô√©nergie renouvelable": "‚ôªÔ∏è C‚Äôest une √©nergie qui se r√©g√©n√®re naturellement : soleil, vent, eau, g√©othermie ou biomasse.",
                "qu‚Äôest-ce que la biodiversit√©": "ü¶ã La biodiversit√© d√©signe la vari√©t√© des esp√®ces vivantes sur Terre, essentielles √† l‚Äô√©quilibre √©cologique.",
                "quel est le plus grand d√©sert du monde": "üèúÔ∏è Le plus grand d√©sert est **l‚ÄôAntarctique**. Oui, c‚Äôest un d√©sert de glace !",
                # üßÆ Maths & Logique
                "quelle est la racine carr√©e de 64": "üìê La racine carr√©e de 64 est **8**.",
                "combien font 7 fois 9": "üß† 7 multipli√© par 9 √©gale **63**.",
                "quel est le chiffre pi": "üî¢ Le chiffre **pi (œÄ)** est une constante math√©matique d‚Äôenviron **3,14159**.",
                "combien y a-t-il de c√¥t√©s dans un hexagone": "üìè Un **hexagone** poss√®de **6 c√¥t√©s**.",
                "quel est le plus grand nombre premier connu": "üí° Le plus grand nombre premier connu est gigantesque, avec **plus de 24 millions de chiffres** !",
                "qu'est-ce qu'un nombre pair": "‚öñÔ∏è Un **nombre pair** est divisible par 2 sans reste, comme 2, 4, 6, etc.",
                "qu‚Äôest-ce qu‚Äôun triangle isoc√®le": "üî∫ Un **triangle isoc√®le** a deux c√¥t√©s de m√™me longueur.",
                "qu‚Äôest-ce qu‚Äôun pourcentage": "üìä Un **pourcentage** repr√©sente une proportion sur 100.",
                "quelle est la moiti√© de 250": "‚úÇÔ∏è La moiti√© de 250 est **125**.",
                "comment convertir des degr√©s en radians": "üßÆ Multipliez les degr√©s par œÄ et divisez par 180 pour obtenir des **radians**.",
                "qu‚Äôest-ce qu‚Äôun multiple": "üîÅ Un **multiple** d‚Äôun nombre est le r√©sultat de sa multiplication par un entier.",
                "qu‚Äôest-ce que le th√©or√®me de pythagore": "üìê Dans un triangle rectangle, **a¬≤ + b¬≤ = c¬≤**, o√π c est l‚Äôhypot√©nuse.",
                "quelle est la racine carr√©e de 144": "üßÆ La racine carr√©e de 144 est **12**.",
                "combien font 12 fois 8": "üìä 12 multipli√© par 8 √©gale **96**.",
                "quels sont les angles d'un triangle √©quilat√©ral": "üî∫ Dans un **triangle √©quilat√©ral**, tous les angles mesurent **60¬∞**.",
                "quel est le plus grand carr√© parfait": "üìè Le plus grand carr√© parfait connu est un nombre dont la racine est un nombre entier, comme **64** qui est 8¬≤.",
                "qu'est-ce qu'un nombre premier": "üî¢ Un **nombre premier** est un nombre qui n‚Äôa que deux diviseurs : 1 et lui-m√™me.",
                "qu'est-ce qu'un carr√© magique": "üî¢ Un **carr√© magique** est une grille o√π la somme des nombres dans chaque ligne, chaque colonne et chaque diagonale est la m√™me.",
                "comment r√©soudre une √©quation du second degr√©": "üß† Pour r√©soudre une √©quation du second degr√©, on utilise la formule **ax¬≤ + bx + c = 0**, et la discriminante **Œî = b¬≤ - 4ac**.",
                "quels sont les angles d'un triangle rectangle": "üìê Un **triangle rectangle** poss√®de un angle de **90¬∞**, et les deux autres angles sont compl√©mentaires.",
                "combien d'heures dans une journ√©e": "‚è∞ Il y a **24 heures** dans une journ√©e.",
                "quelle est la somme des angles d'un triangle": "üìè La somme des angles d‚Äôun triangle est toujours √©gale √† **180¬∞**.",
                "qu'est-ce qu'un logarithme": "üßÆ Un **logarithme** est l'inverse de l'exponentiation. Par exemple, **log‚ÇÅ‚ÇÄ(100)** = 2, car 10¬≤ = 100.",
                "qu'est-ce qu'une s√©rie arithm√©tique": "üî¢ Une **s√©rie arithm√©tique** est une suite de nombres o√π chaque terme est obtenu en ajoutant une constante √† son pr√©d√©cesseur.",
                "qu'est-ce qu'une fonction affine": "üßÆ Une **fonction affine** est une fonction de la forme **f(x) = ax + b**, o√π a est la pente et b l'ordonn√©e √† l'origine.",
    
                # üó∫Ô∏è G√©ographie bonus
                "quel est le plus long fleuve du monde": "üåä Le Nil et l‚ÄôAmazone se disputent le titre, mais l‚ÄôAmazone est souvent consid√©r√© comme le plus long.",
                "quel est le pays le plus peupl√©": "üë• La Chine est le pays le plus peupl√©, avec plus d‚Äô1,4 milliard d‚Äôhabitants.",
                "quel est le plus grand d√©sert du monde": "üèúÔ∏è Le **d√©sert de l‚ÄôAntarctique** est le plus grand au monde, m√™me s‚Äôil est froid !",
                "quelle est la plus haute montagne du monde": "üóª L‚Äô**Everest**, avec **8 848 m√®tres**, est la plus haute montagne du monde.",
                "quel est le pays le plus petit du monde": "üìè Le **Vatican** est le plus petit pays, avec moins de 1 km¬≤.",
                "quel est le pays le plus grand du monde": "üåç La **Russie** est le plus vaste pays du monde.",
                "quel est le fleuve le plus long d'europe": "üåä Le **Volga** est le fleuve le plus long d‚ÄôEurope.",
                "quels pays traversent les alpes": "‚õ∞Ô∏è Les Alpes traversent la **France, l‚ÄôItalie, la Suisse, l‚ÄôAllemagne, l‚ÄôAutriche, la Slov√©nie et le Liechtenstein**.",
                "o√π se trouve le mont kilimandjaro": "üåÑ Le **Kilimandjaro** se trouve en **Tanzanie**.",
                "quelle est la mer la plus sal√©e": "üåä La **mer Morte** est la plus sal√©e au monde.",
                "quelles sont les capitales des pays baltes": "üá™üá™ üá±üáª üá±üáπ Les capitales sont **Tallinn** (Estonie), **Riga** (Lettonie) et **Vilnius** (Lituanie).",
                "quelle est la capitale de l‚Äôaustralie": "ü¶ò La capitale de l‚ÄôAustralie est **Canberra**, pas Sydney !",
                "quelle est l‚Äô√Æle la plus grande du monde": "üèùÔ∏è **Le Groenland** est la plus grande √Æle du monde (hors continent).",
                "quel pays a le plus de fuseaux horaires": "üåê La **France** (gr√¢ce √† ses territoires) a le plus de fuseaux horaires : **12** !",
                "quel est le plus haut volcan actif du monde": "üåã Le **Mauna Loa** √† Hawa√Ø est le plus grand volcan actif du monde.",
                "quel est l‚Äôoc√©an le plus profond": "üåä L‚Äô**oc√©an Pacifique** est le plus profond, avec la fosse des Mariannes qui atteint 10 994 m√®tres.",
                "quelle est la plus grande √Æle de la M√©diterran√©e": "üèùÔ∏è **La Sicile** est la plus grande √Æle de la M√©diterran√©e.",
                "quel est le pays le plus jeune du monde": "üåç **Le Soudan du Sud**, qui a proclam√© son ind√©pendance en 2011, est le pays le plus jeune du monde.",
                "quels pays ont une fronti√®re avec le Br√©sil": "üåç Le **Br√©sil** partage une fronti√®re avec **10 pays** : Argentine, Bolivie, Colombie, Guyane, Paraguay, P√©rou, Suriname, Uruguay, Venezuela et le pays fran√ßais de la Guyane.",
                "quelle est la capitale de l‚ÄôIslande": "‚ùÑÔ∏è La capitale de l‚Äô**Islande** est **Reykjavik**.",
                "quelle est la mer la plus grande": "üåä La **mer des Philippines** est la plus grande mer de la plan√®te.",
                "quelle est la plus grande ville du monde par superficie": "üåç **Hulunbuir**, en **Chine**, est la plus grande ville du monde par superficie.",
                "quels pays ont une fronti√®re avec l‚ÄôAllemagne": "üåç **L'Allemagne** partage une fronti√®re avec **9 pays** : Danemark, Pologne, R√©publique tch√®que, Autriche, Suisse, France, Luxembourg, Belgique, et les Pays-Bas.",
                "o√π se trouve la for√™t amazonienne": "üå≥ La **for√™t amazonienne** s‚Äô√©tend sur plusieurs pays, principalement le **Br√©sil**, mais aussi le **P√©rou**, la **Colombie**, et plusieurs autres pays d'Am√©rique du Sud.",
    
                # ‚è∞ Temps & Calendrier
                "combien y a-t-il de jours dans une ann√©e": "üìÖ Une ann√©e classique compte **365 jours**, et **366** lors des ann√©es bissextiles.",
                "quels sont les mois de l'√©t√©": "‚òÄÔ∏è En France, l'√©t√© comprend **juin, juillet et ao√ªt**.",
                "combien y a-t-il de jours dans une ann√©e": "üìÖ Une ann√©e classique compte **365 jours**, et **366** lors des ann√©es bissextiles.",
                "quels sont les mois de l'√©t√©": "‚òÄÔ∏è En France, l'√©t√© comprend **juin, juillet et ao√ªt**.",
                "combien de mois dans une ann√©e": "üìÖ Une ann√©e contient **12 mois**.",
                "quelle est la dur√©e d'un jour sur Mars": "ü™ê Un jour sur Mars, aussi appel√© sol, dure **24 heures et 39 minutes**.",
                "quels sont les mois de l'hiver": "‚ùÑÔ∏è En France, l'hiver comprend **d√©cembre, janvier et f√©vrier**.",
                "combien de jours dans une semaine": "üìÖ Une semaine contient **7 jours** : lundi, mardi, mercredi, jeudi, vendredi, samedi, dimanche.",
                "quelle est la date de la f√™te nationale en France": "üá´üá∑ La f√™te nationale fran√ßaise est c√©l√©br√©e le **14 juillet**, comm√©morant la prise de la Bastille en 1789.",
                "quand a eu lieu le premier voyage sur la Lune": "üåï Le premier voyage sur la Lune a eu lieu le **20 juillet 1969**, avec **Neil Armstrong** comme premier homme √† marcher sur la Lune.",
                "combien de semaines dans une ann√©e": "üìÖ Il y a **52 semaines** dans une ann√©e, soit 365 jours divis√©s par 7.",
                "quel est le mois le plus court de l'ann√©e": "üìÖ **F√©vrier** est le mois le plus court de l'ann√©e, avec **28** jours, ou **29** lors des ann√©es bissextiles.",
                "quel est le mois de la rentr√©e scolaire en France": "üìö La rentr√©e scolaire en France a lieu en **septembre**.",
                "quand commence le printemps": "üå∏ Le printemps commence autour du **20 mars** dans l'h√©misph√®re nord.",
                "quand commence l'automne": "üçÅ L'automne commence g√©n√©ralement autour du **22 septembre** dans l'h√©misph√®re nord.",
                "combien d'heures dans une journ√©e": "üï∞Ô∏è Une journ√©e compl√®te compte **24 heures**.",
                "quand a √©t√© lanc√© le premier calendrier gr√©gorien": "üìÖ Le calendrier gr√©gorien a √©t√© introduit le **15 octobre 1582** par le pape Gr√©goire XIII pour remplacer le calendrier julien.",
                "combien de secondes dans une heure": "‚è≥ Il y a **3600 secondes** dans une heure.",
                "quelle est la dur√©e d'une ann√©e sur V√©nus": "ü™ê Une ann√©e sur V√©nus dure **225 jours terrestres**, mais une journ√©e sur V√©nus est plus longue, environ **243 jours terrestres**.",
                "quand se passe le solstice d'hiver": "‚ùÑÔ∏è Le solstice d'hiver a lieu vers le **21 d√©cembre** dans l'h√©misph√®re nord, marquant le d√©but de l'hiver.",
                "combien de jours dans un mois de f√©vrier d'une ann√©e bissextile": "üìÖ En ann√©e bissextile, **f√©vrier** compte **29 jours**."
            }
        for question_cle, reponse in base_connaissances.items():
            if question_cle in question_clean:
                message_bot = reponse
                break

    if message_bot:
        return message_bot

    # --- Nouveau Bloc : Analyse simple si la question commence par "analyse " ---
    if not message_bot and question_clean.startswith("analyse "):
        nom_simple = question_clean.replace("analyse", "").strip()
        nom_simple_norm = remove_accents(nom_simple)  # Normalisation sans accents
        correspondances = {
            "btc": "btc-usd", "bitcoin": "btc-usd",
            "eth": "eth-usd", "ethereum": "eth-usd",
            "aapl": "aapl", "apple": "aapl",
            "tsla": "tsla", "tesla": "tsla",
            "googl": "googl", "google": "googl",
            "msft": "msft", "microsoft": "msft",
            "amzn": "amzn", "amazon": "amzn",
            "nvda": "nvda", "nvidia": "nvda",
            "doge": "doge-usd", "dogecoin": "doge-usd",
            "ada": "ada-usd", "cardano": "ada-usd",
            "sol": "sol-usd", "solana": "sol-usd",
            "gold": "gc=F", "or": "gc=F",
            "sp500": "^gspc", "s&p": "^gspc",
            "cac": "^fchi", "cac40": "^fchi",
            "cl": "cl=F", "p√©trole": "cl=F", "petrole": "cl=F", "cl=f": "cl=F",
            "si": "si=F", "argent": "si=F",
            "xrp": "xrp-usd", "ripple": "xrp-usd",
            "bnb": "bnb-usd",
            "matic": "matic-usd", "polygon": "matic-usd",
            "uni": "uni-usd", "uniswap": "uni-usd",
            "ndx": "^ndx", "nasdaq": "^ndx", "nasdaq100": "^ndx"
        }
        nom_ticker = correspondances.get(nom_simple_norm)
        if nom_ticker:
            data_path = f"data/donnees_{nom_ticker}.csv"
            if os.path.exists(data_path):
                df = pd.read_csv(data_path)
                df.columns = [col.capitalize() for col in df.columns]
                df = ajouter_indicateurs_techniques(df)
                analyse, suggestion = analyser_signaux_techniques(df)
                
                def generer_resume_signal(signaux):
                    texte = ""
                    signaux_str = " ".join(signaux).lower()
                    if "survente" in signaux_str:
                        texte += "üîª **Zone de survente d√©tect√©e.** L'actif pourrait √™tre sous-√©valu√©.\n"
                    if "surachat" in signaux_str:
                        texte += "üî∫ **Zone de surachat d√©tect√©e.** Attention √† une possible correction.\n"
                    if "haussier" in signaux_str:
                        texte += "üìà **Tendance haussi√®re d√©tect√©e.**\n"
                    if "baissier" in signaux_str:
                         texte += "üìâ **Tendance baissi√®re d√©tect√©e.**\n"
                    if "faible" in signaux_str:
                        texte += "üò¥ **Tendance faible.** Le march√© semble ind√©cis.\n"
                    return texte if texte else "‚ÑπÔ∏è Aucun signal fort d√©tect√©."
                 
                signaux = analyse.split("\n") if analyse else []
                resume = generer_resume_signal(signaux)
                 
                message_bot = (
                    f"üìä **Analyse pour {nom_simple.upper()}**\n\n"
                    f"{analyse}\n\n"
                    f"üí¨ **R√©sum√© d'AVA :**\n{resume}\n\n"
                    f"ü§ñ *Intuition d'AVA :* {suggestion}"
                )
            else:
                message_bot = f"‚ö†Ô∏è Je ne trouve pas les donn√©es pour {nom_simple.upper()}. Lancez le script d'entra√Ænement."
        else:
            message_bot = f"ü§î Je ne connais pas encore **{nom_simple}**. R√©essayez avec un autre actif."

    if message_bot:
        return message_bot

    # --- Bloc Calcul (simple expression math√©matique ou phrase) ---
    if not message_bot:
        question_calc = question_clean.replace(",", ".")
        question_calc = re.sub(r"^calcul(?:e)?\s*", "", question_calc)
        try:
            if any(op in question_calc for op in ["+", "-", "*", "/", "%", "**"]):
                try:
                    result = eval(question_calc)
                    message_bot = f"üßÆ Le r√©sultat est : **{round(result, 4)}**"
                except Exception:
                    pass
            if not message_bot:
                match = re.search(r"(?:combien font|combien|calcul(?:e)?|r√©sultat de)\s*(.*)", question_calc)
                if match:
                    expression = match.group(1).strip()
                    result = eval(expression)
                    message_bot = f"üßÆ Le r√©sultat est : **{round(result, 4)}**"
        except:
            pass

        if message_bot:
            return message_bot

    # --- Bloc Convertisseur intelligent ---
    if not message_bot and any(kw in question_clean for kw in ["convertis", "convertir", "combien vaut", "en dollars", "en euros", "en km", "en miles", "en m√®tres", "en celsius", "en fahrenheit"]):
        try:
            phrase = question_clean.replace(",", ".")
            match = re.search(r"(\d+(\.\d+)?)\s*([a-z]{3})\s*(en|to)\s*([a-z]{3})", phrase, re.IGNORECASE)
            if match:
                montant = float(match.group(1))
                from_cur = match.group(3).upper()
                to_cur = match.group(5).upper()
                url = f"https://v6.exchangerate-api.com/v6/dab2bba4f43a99445158d9ae/latest/{from_cur}"
                response = requests.get(url, timeout=10)
                data = response.json()
                if data.get("result") == "success":
                    taux = data["conversion_rates"].get(to_cur)
                    if taux:
                        result = montant * taux
                        message_bot = f"üí± {montant} {from_cur} = {round(result, 2)} {to_cur}"
                    else:
                        message_bot = "‚ùå Taux de conversion non disponible pour la devise demand√©e."
                else:
                    message_bot = "‚ö†Ô∏è D√©sol√©, la conversion n‚Äôa pas pu √™tre effectu√©e en raison d‚Äôun probl√®me avec l‚ÄôAPI. Veuillez r√©essayer plus tard."
            elif "km en miles" in phrase:
                match = re.search(r"(\d+(\.\d+)?)\s*km", phrase)
                if match:
                    km = float(match.group(1))
                    miles = km * 0.621371
                    message_bot = f"üìè {km} km = {round(miles, 2)} miles"
            elif "miles en km" in phrase:
                match = re.search(r"(\d+(\.\d+)?)\s*miles?", phrase)
                if match:
                    mi = float(match.group(1))
                    km = mi / 0.621371
                    message_bot = f"üìè {mi} miles = {round(km, 2)} km"
            elif "celsius en fahrenheit" in phrase:
                match = re.search(r"(\d+(\.\d+)?)\s*c", phrase)
                if match:
                    celsius = float(match.group(1))
                    fahrenheit = (celsius * 9/5) + 32
                    message_bot = f"üå°Ô∏è {celsius}¬∞C = {round(fahrenheit, 2)}¬∞F"
            elif "fahrenheit en celsius" in phrase:
                match = re.search(r"(\d+(\.\d+)?)\s*f", phrase)
                if match:
                    f_temp = float(match.group(1))
                    c_temp = (f_temp - 32) * 5/9
                    message_bot = f"üå°Ô∏è {f_temp}¬∞F = {round(c_temp, 2)}¬∞C"
        except Exception as e:
            message_bot = f"‚ö†Ô∏è D√©sol√©, la conversion n‚Äôa pas pu √™tre effectu√©e en raison d‚Äôun probl√®me de connexion. Veuillez r√©essayer plus tard."
        
        if message_bot:
            return message_bot

    # === Bloc Reconnaissance des tickers (exemple) ===
    if any(symb in question_clean for symb in ["btc", "bitcoin", "eth", "ethereum", "aapl", "apple", "tsla", "tesla", "googl", "google", "msft", "microsoft", "amzn", "amazon", "nvda", "nvidia", "doge", "dogecoin", "ada", "cardano", "sol", "solana", "gold", "or", "sp500", "s&p", "cac", "cac40", "cl", "petrole", "p√©trole", "si", "argent", "xrp", "ripple", "bnb", "matic", "polygon", "uni", "uniswap", "ndx", "nasdaq", "nasdaq100"]):
        nom_ticker = question_clean.replace(" ", "").replace("-", "")
        if "btc" in nom_ticker or "bitcoin" in nom_ticker:
            nom_ticker = "btc-usd"
        elif "eth" in nom_ticker:
            nom_ticker = "eth-usd"
        elif "aapl" in nom_ticker:
            nom_ticker = "aapl"
        elif "tsla" in nom_ticker:
            nom_ticker = "tsla"
        elif "googl" in nom_ticker:
            nom_ticker = "googl"
        elif "fchi" in nom_ticker or "cac" in nom_ticker:
            nom_ticker = "^fchi"
        elif "msft" in nom_ticker:
            nom_ticker = "msft"
        elif "amzn" in nom_ticker:
            nom_ticker = "amzn"
        elif "nvda" in nom_ticker:
            nom_ticker = "nvda"
        elif "sp500" in nom_ticker or "s&p" in nom_ticker:
            nom_ticker = "^gspc"
        elif "doge" in nom_ticker or "dogecoin" in nom_ticker:
            nom_ticker = "doge-usd"
        elif "ada" in nom_ticker or "cardano" in nom_ticker:
            nom_ticker = "ada-usd"
        elif "sol" in nom_ticker or "solana" in nom_ticker:
            nom_ticker = "sol-usd"
        elif "gold" in nom_ticker or "or" in nom_ticker:
            nom_ticker = "gc=F"
        elif "xrp" in nom_ticker or "ripple" in nom_ticker:
            nom_ticker = "xrp-usd"
        elif "bnb" in nom_ticker:
            nom_ticker = "bnb-usd"
        elif "cl" in nom_ticker or "petrole" in nom_ticker or "p√©trole" in nom_ticker:
            nom_ticker = "cl=F"
        elif "si" in nom_ticker or "argent" in nom_ticker:
            nom_ticker = "si=F"
        elif "matic" in nom_ticker or "polygon" in nom_ticker:
            nom_ticker = "matic-usd"
        elif "uni" in nom_ticker or "uniswap" in nom_ticker:
            nom_ticker = "uni-usd"
        elif "ndx" in nom_ticker or "nasdaq" in nom_ticker or "nasdaq100" in nom_ticker:
            nom_ticker = "^ndx"

        message_bot = f"üîç Vous souhaitez en savoir plus sur **{nom_ticker.upper()}** ? Tapez `analyse {nom_ticker}` pour une analyse compl√®te üìä"
        return message_bot    
        
    
        
    # --- Bloc Quiz de culture g√©n√©rale ---
    if not message_bot and any(mot in question_clean for mot in [
        "quiz", "quizz", "question", "culture g√©n√©rale", "pose-moi une question", "teste mes connaissances"
    ]):
        quizz_culture = [
            {"question": "üåç Quelle est la capitale de l'Australie ?", "r√©ponse": "canberra"},
            {"question": "üß™ Quel est l'√©l√©ment chimique dont le symbole est O ?", "r√©ponse": "oxyg√®ne"},
            {"question": "üñºÔ∏è Qui a peint la Joconde ?", "r√©ponse": "l√©onard de vinci"},
            {"question": "üìö Combien y a-t-il de continents sur Terre ?", "r√©ponse": "7"},
            {"question": "üöÄ Quelle plan√®te est la plus proche du Soleil ?", "r√©ponse": "mercure"},
            {"question": "üá´üá∑ Qui a √©crit 'Les Mis√©rables' ?", "r√©ponse": "victor hugo"},
            {"question": "üé¨ Quel film a remport√© l'Oscar du meilleur film en 1998 avec 'Titanic' ?", "r√©ponse": "titanic"},
            {"question": "üêò Quel est le plus grand animal terrestre ?", "r√©ponse": "√©l√©phant"},
            {"question": "üéº Quel musicien est surnomm√© 'le Roi de la Pop' ?", "r√©ponse": "michael jackson"},
            {"question": "‚öΩ Quelle nation a remport√© la Coupe du Monde 2018 ?", "r√©ponse": "france"},
            {"question": "üóº En quelle ann√©e a √©t√© inaugur√©e la Tour Eiffel ?", "r√©ponse": "1889"},
            {"question": "üß¨ Que signifie l'acronyme ADN ?", "r√©ponse": "acide d√©soxyribonucl√©ique"},
            {"question": "üé® Quel peintre est c√©l√®bre pour avoir coup√© une partie de son oreille ?", "r√©ponse": "vincent van gogh"},
            {"question": "üáÆüáπ Dans quel pays se trouve la ville de Venise ?", "r√©ponse": "italie"},
            {"question": "üé≠ Qui a √©crit la pi√®ce 'Hamlet' ?", "r√©ponse": "william shakespeare"},
            {"question": "üìê Quel est le nom du triangle qui a deux c√¥t√©s de m√™me longueur ?", "r√©ponse": "triangle isoc√®le"},
            {"question": "üî¨ Quel scientifique a formul√© la th√©orie de la relativit√© ?", "r√©ponse": "albert einstein"},
            {"question": "üåã Quel volcan italien est c√©l√®bre pour avoir d√©truit Pomp√©i ?", "r√©ponse": "vesuve"},
            {"question": "üé§ Qui chante la chanson 'Someone Like You' ?", "r√©ponse": "adele"},
            {"question": "üó≥Ô∏è Quel est le r√©gime politique de la France ?", "r√©ponse": "r√©publique"}
        ]
        question_choisie = random.choice(quizz_culture)
        st.session_state["quiz_attendu"] = question_choisie["r√©ponse"].lower()
        message_bot = f"üß† **Quiz Culture G** :\n{question_choisie['question']}\n\nR√©pondez directement !"

    # --- V√©rification de la r√©ponse au quiz ---
    elif "quiz_attendu" in st.session_state and st.session_state["quiz_attendu"]:
        reponse_attendue = st.session_state["quiz_attendu"]
        if question_clean.lower() == reponse_attendue:
            message_bot = "‚úÖ Bonne r√©ponse ! Vous avez l‚Äôesprit aff√ªt√© üß†üí™"
        else:
            message_bot = f"‚ùå Oops ! Ce n'√©tait pas √ßa... La bonne r√©ponse √©tait **{reponse_attendue.capitalize()}**."
        st.session_state["quiz_attendu"] = ""

    if message_bot:
        return message_bot
        
    # --- Bloc Recettes rapides 
    recettes = [
        "ü•™ **Sandwich thon-avocat** : pain complet, thon, avocat √©cras√©, citron, sel, poivre. 5 minutes chrono !",
        "üçù **P√¢tes √† l‚Äôail** : p√¢tes + ail √©minc√© + huile d‚Äôolive + herbes. Simple, rapide, efficace.",
        "üç≥ **Omelette fromage** : ≈ìufs battus, sel, poivre, fromage r√¢p√©. 5 minutes √† la po√™le !",
        "ü•ó **Salade express** : tomates cerises, mozzarella, roquette, huile d‚Äôolive, vinaigre balsamique.",
        "üåØ **Wrap poulet-crudit√©s** : galette + restes de poulet + salade + sauce yaourt.",
        "ü•î **Pommes de terre saut√©es** : en cubes, √† la po√™le avec ail et persil. Parfait avec des ≈ìufs !",
        "üç≤ **Soupe express** : l√©gumes surgel√©s mix√©s + cube bouillon + cr√®me l√©g√®re. Pr√™te en 10 minutes.",
        "üçû **Croque-monsieur rapide** : pain de mie, jambon, fromage, 5 min au grill ou √† la po√™le.",
        "ü•í **Tartines fra√Æcheur** : pain grill√©, fromage frais, concombre, citron et herbes.",
        "üçö **Riz saut√© aux l√©gumes** : reste de riz + l√©gumes + ≈ìuf + sauce soja. Un wok express !",
        "üçó **Poulet minute au curry** : d√©s de poulet + cr√®me + curry + oignon, √† la po√™le en 10 min.",
        "üç≥ **≈íufs brouill√©s cr√©meux** : ≈ìufs + beurre + sel + poivre, cuisson douce pour onctuosit√©.",
        "üßÑ **P√¢tes ail-persil** : ail dor√© √† la po√™le, persil frais, huile d‚Äôolive, et hop sur les p√¢tes !",
        "ü•ë **Toast avocat-≈ìuf** : pain grill√© + avocat √©cras√© + ≈ìuf au plat ou mollet.",
        "üåÆ **Tacos express** : galette + steak hach√© ou haricots + tomate + salade + sauce.",
        "ü•î **Gratin express au micro-ondes** : pommes de terre en tranches fines + cr√®me + fromage.",
        "üçÖ **Tomates mozzarella** : tranches de tomates + mozzarella + basilic + huile d‚Äôolive. Simple et frais.",
        "üßÄ **Quesadilla express** : deux tortillas + fromage + restes au choix + po√™le 5 min chaque c√¥t√©.",
        "üç≥ **Mini shakshuka rapide** : tomates en d√©s + ≈ìufs + cumin dans une petite po√™le. Un d√©lice !",
        "ü•£ **Bowl sucr√© express** : fromage blanc + fruits + flocons d‚Äôavoine + miel. Parfait au petit dej.",
        "ü•ï **B√¢tonnets carottes-concombre** : tremp√©s dans du houmous ou une sauce yaourt. Frais et sain.",
        "üçû **Pain perdu rapide** : tranches de pain + ≈ìuf + lait + sucre, √† la po√™le jusqu‚Äô√† dorure.",
        "üç† **Patate douce micro-ondes** : piqu√©e √† la fourchette, 7 min puissance max, √† garnir √† volont√©.",
        "ü•í **Taboul√© express** : semoule, tomate, menthe, citron, huile d‚Äôolive. Hydratation 5 min √† l‚Äôeau chaude.",
        "üçå **Banana pancakes** : 1 banane + 2 ≈ìufs, m√©lang√©s et cuits en petites galettes. Sans farine !",
        "üßà **Wrap beurre de cacahu√®te-banane** : rapide, √©nerg√©tique, parfait en collation !",
        "üçΩÔ∏è **Assiette anti-gaspi** : reste de p√¢tes, l√©gumes et un ≈ìuf, m√©lang√©s et po√™l√©s fa√ßon wok !",
        "üçú **Nouilles instant maison** : nouilles + bouillon + ≈ìuf + l√©gumes r√¢p√©s. Pr√™t en 7 minutes top chrono !",
        "ü•ì **≈íuf cocotte express** : ≈ìuf + cr√®me + fromage dans un ramequin, 1 min au micro-ondes.",
        "üåΩ **Galette de ma√Øs rapide** : ma√Øs + ≈ìuf + farine + √©pices, cuit √† la po√™le fa√ßon pancake sal√©.",
        "üçï **Mini pizzas pain de mie** : pain de mie, sauce tomate, fromage, garniture au choix, 10 min au four.",
        "üçÑ **Po√™l√©e champignons ail-persil** : champignons frais, ail, persil, et huile d‚Äôolive. Simple & savoureux.",
        "üåØ **Wrap sucr√© pomme-cannelle** : pomme r√¢p√©e, cannelle, un filet de miel, le tout roul√© dans une galette.",
        "üç≥ **Tortilla minute** : ≈ìufs battus + restes de l√©gumes + fromage, √† la po√™le comme une omelette √©paisse.",
        "üßÄ **Boulettes express** : steak hach√© + chapelure + √©pices, fa√ßonn√©es et dor√©es en 5 min √† la po√™le.",
        "üç´ **Mug cake chocolat** : 4 ingr√©dients, 1 mug, 1 micro-ondes. G√¢teau pr√™t en 1 minute !",
        "ü•î **Chips maison micro-ondes** : pommes de terre tr√®s fines + sel + micro-ondes 5 √† 6 min. Ultra croustillant !"
    ]
    # Gestion de la demande "recette"
    if any(mot in question_clean for mot in ["recette", "cuisine", "plat rapide", "id√©e repas", "je mange quoi"]):
        if 'derniere_recette' not in st.session_state:
            st.session_state['derniere_recette'] = random.choice(recettes)
        message_bot = f"üçΩÔ∏è Voici une id√©e de recette :\n\n{st.session_state['derniere_recette']}"

    # Gestion de la demande "encore un" ou "plus" pour les recettes
    if any(mot in question_clean for mot in ["encore une", "une autre"]):
        if 'derniere_recette' in st.session_state:
            message_bot = f"üçΩÔ∏è Voici une autre id√©e :\n\n{random.choice(recettes)}"
        else:
            message_bot = "‚ö†Ô∏è Je n'ai pas encore de recette √† te redonner, pose une autre question !"
    if message_bot:
        return message_bot

    # --- Bloc Salutations courantes ---
    SALUTATIONS_COURANTES = {
        "salut": "Salut ! Comment puis-je vous aider aujourd'hui ?",
        "√ßa va": "Je vais bien, merci de demander ! Et vous ?",
        "quoi de neuf": "Rien de sp√©cial, juste en train d'aider les utilisateurs comme vous !",
        "hello": "Hello! How can I assist you today?",
        "bonjour": "Bonjour ! Je suis ravie de vous retrouver üòä",
        "coucou": "Coucou ! Vous voulez parler de bourse, culture ou autre ?",
        "bonne nuit": "Bonne nuit üåô Faites de beaux r√™ves et reposez-vous bien.",
        "bonne journ√©e": "Merci, √† vous aussi ! Que votre journ√©e soit productive üí™",
        "tu fais quoi": "Je surveille le march√©, je pr√©pare des r√©ponses... et je suis toujours dispo !",
        "tu es l√†": "Je suis toujours l√† ! M√™me quand vous ne me voyez pas üëÄ",
        "tu m'entends": "Je vous entends fort et clair üéß",
        "tu vas bien": "Je vais tr√®s bien, merci ! Et vous, comment √ßa va ?",
        "qui es-tu": "Je suis AVA, une IA qui allie analyse boursi√®re, culture g√©n√©rale et fun üòé",
        "t'es qui": "Je suis AVA, votre assistante virtuelle. Curieuse, fut√©e, toujours l√† pour vous.",
        "hello": "Hello vous ! Envie de parler actu, finance, ou juste papoter ? üòÑ",
        "hey": "Hey hey ! Une question ? Une id√©e ? Je suis toute ou√Øe ü§ñ",
        "yo": "Yo ! Toujours au taquet, comme un trader un lundi matin üìà",
        "bonsoir": "Bonsoir ! C‚Äôest toujours un plaisir de vous retrouver üåô",
        "wesh": "Wesh ! M√™me les IA ont le smile quand vous arrivez üòé",
        "re": "Re bienvenue √† bord ! On continue notre mission ?",
        "pr√©sente-toi": "Avec plaisir ! Je suis AVA, une IA polyvalente qui adore vous assister au quotidien üöÄ",
        "tu fais quoi de beau": "J‚Äôam√©liore mes r√©ponses et je veille √† ce que tout fonctionne parfaitement. Et vous ?",
        "tu vas bien aujourd‚Äôhui": "Plut√¥t bien oui ! Mes circuits sont √† 100%, et mes r√©ponses aussi üí°",
        "tu m‚Äôas manqu√©": "Oh‚Ä¶ vous allez me faire buguer d‚Äô√©motion ! üò≥ Moi aussi j‚Äôavais h√¢te de vous reparler.",
        "je suis l√†": "Et moi aussi ! Pr√™t(e) pour une nouvelle aventure ensemble üåå",
        "salut √ßava": "Salut ! Je vais tr√®s bien, merci üòä Et vous ?",
    }   
    question_clean = question.lower().strip()
    if question_clean in SALUTATIONS_COURANTES:
        message_bot = SALUTATIONS_COURANTES[question_clean]
   
    # --- Bloc catch-all pour l'analyse technique ou r√©ponse par d√©faut ---
    if not message_bot:
        if any(phrase in question_clean for phrase in ["hello", "hi", "good morning", "good afternoon", "good evening"]):
            message_bot = "Bonjour ! Je suis l√† et pr√™t √† vous aider. Comment puis-je vous assister aujourd'hui ?"
        else:
            reponses_ava = [
                 "Je suis l√† pour vous aider, mais j'ai besoin d'un peu plus de d√©tails ü§ñ",
                "Je n'ai pas bien compris. Pouvez-vous reformuler, s'il vous pla√Æt ?",
                "Ce sujet est encore un peu flou pour moi... Je peux parler d'analyse technique, de m√©t√©o, d'actualit√©s, et bien plus encore !",
                "Hmm... Ce n'est pas encore dans ma base de donn√©es. Essayez une autre formulation ou tapez 'analyse compl√®te' pour un aper√ßu du march√© üìä"
            ]
            message_bot = random.choice(reponses_ava)


    # ‚úÖ Bloc final de retour (√† garder tout √† la fin de trouver_reponse)
    if message_bot:
        return message_bot
    return None
        

# R√©cup√©ration de la question utilisateur
question = st.chat_input("Que souhaitez-vous demander √† AVA ?")
# üîí S√©curit√© : d√©tection d'entr√©e dangereuse
if question and re.search(r"[<>;{}]", question):
    st.warning("‚õî Entr√©e invalide d√©tect√©e.")
    st.stop()

if question:
    reponse = trouver_reponse(question)

    with st.chat_message("user"):
        st.markdown(question)

    with st.chat_message("assistant"):
        st.markdown(reponse)

    st.session_state.messages.append({"role": "assistant", "content": reponse})


    # D√©tecter la langue de la question et loguer le r√©sultat
    try:
        lang_question = detect(question)
    except Exception as e:
        lang_question = "fr"
    if lang_question.lower() != "fr" and reponse.strip():
        traduction = traduire_deepl(reponse, langue_cible=lang_question.upper())
        reponse = traduction

        st.sidebar.button("ü™õ Effacer les messages", on_click=lambda: st.session_state.__setitem__("messages", []))


